openapi: 3.0.1
info:
  contact:
    email: info@finbourne.com
    name: FINBOURNE Technology
    url: https://www.finbourne.com
  description: |
    The Workflow Service enables you to create data and business operational controls for LUSID by modelling workflows, defining tasks, and setting state transitions with triggers and actions.

    ### Error Codes

    | Code|Name|Description |
    | ---|---|--- |
    | <a name="-1">-1</a>|Unknown error|An unexpected error was encountered on our side. |
    | <a name="144">144</a>|Duplicate In Parameter Set| |
    | <a name="151">151</a>|Invalid Parameter Value| |
    | <a name="689">689</a>|The supplied pagination token is invalid| |
    | <a name="692">692</a>|This endpoint does not support impersonation| |
    | <a name="743">743</a>|Task Definition not found.| |
    | <a name="744">744</a>|Task not found.| |
    | <a name="745">745</a>|Task Definition could not be serialised.| |
    | <a name="750">750</a>|A Guard clause rejected the Transition of a Task.| |
    | <a name="825">825</a>|An Update operation on a Task failed.| |
    | <a name="826">826</a>|Task could not be created.| |
    | <a name="827">827</a>|Task could not raise onward Notifications.| |
    | <a name="862">862</a>|Worker not found.| |
    | <a name="863">863</a>|Illogical Task Definition.| |
    | <a name="864">864</a>|Invalid Task Definition.| |
    | <a name="865">865</a>|Action processing failure.| |
    | <a name="866">866</a>|Luminesce Lookup failure.| |
    | <a name="867">867</a>|Worker failure.| |
    | <a name="868">868</a>|Worker creation failure.| |
    | <a name="871">871</a>|The specified impersonated user does not exist| |
    | <a name="872">872</a>|Worker Run not found.| |
    | <a name="873">873</a>|Action not found.| |
    | <a name="893">893</a>|Event Handler not found.| |
    | <a name="894">894</a>|Invalid Event Handler.| |
  termsOfService: https://www.finbourne.com/legal/terms-conditions
  title: FINBOURNE Workflow API
  version: 0.1.1330
  x-logo:
    url: https://www.lusid.com/app/assets/logo_white.png
    backgroundColor: '#415464'
  x-fbn-error-codes:
    "-1":
      title: Unknown error
      description: An unexpected error was encountered on our side.
    "144":
      title: Duplicate In Parameter Set
    "151":
      title: Invalid Parameter Value
    "689":
      title: The supplied pagination token is invalid
    "692":
      title: This endpoint does not support impersonation
    "743":
      title: Task Definition not found.
    "744":
      title: Task not found.
    "745":
      title: Task Definition could not be serialised.
    "750":
      title: A Guard clause rejected the Transition of a Task.
    "825":
      title: An Update operation on a Task failed.
    "826":
      title: Task could not be created.
    "827":
      title: Task could not raise onward Notifications.
    "862":
      title: Worker not found.
    "863":
      title: Illogical Task Definition.
    "864":
      title: Invalid Task Definition.
    "865":
      title: Action processing failure.
    "866":
      title: Luminesce Lookup failure.
    "867":
      title: Worker failure.
    "868":
      title: Worker creation failure.
    "871":
      title: The specified impersonated user does not exist
    "872":
      title: Worker Run not found.
    "873":
      title: Action not found.
    "893":
      title: Event Handler not found.
    "894":
      title: Invalid Event Handler.
  x-fbn-description: "The Workflow Service enables you to create data and business\
    \ operational controls for LUSID by modelling workflows, defining tasks, and setting\
    \ state transitions with triggers and actions."
servers:
- url: https://fbn-prd.lusid.com/workflow
security:
- {}
tags:
- description: Endpoints for retrieving Action Logs
  name: Action Logs
- description: Methods for querying Workflow application metadata
  name: Application Metadata
- description: Workflow endpoint for managing Event Handlers
  name: Event Handlers
- description: Workflow endpoint for managing Task Definitions
  name: Task Definitions
- description: Workflow endpoint for managing Tasks
  name: Tasks
- description: Workflow endpoint for managing and running Workers
  name: Workers
paths:
  /api/actionlogs/{id}:
    get:
      operationId: GetActionLogs
      parameters:
      - description: The Action Id
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              example:
                id: b9c3f647-5ce8-4d4c-9599-bd6addf6ff29
                origin:
                  taskId: c17a8537-68b0-460b-8cbb-a86724163c83
                  requestId: TestRequestId
                actionType: RunWorker
                runAsUserId: TestUserId
                loggedItems:
                - timestamp: 2024-01-02T03:00:00.0000000+00:00
                  logType: ActionSubmitted
                - timestamp: 2024-01-02T03:01:00.0000000+00:00
                  logType: ActionInitialising
                - timestamp: 2024-01-02T03:02:00.0000000+00:00
                  logType: ActionStarted
                - timestamp: 2024-01-02T03:02:00.0000000+00:00
                  logType: ActionProgressUpdate
                  details: Processing Luminesce query
                - timestamp: 2024-01-02T03:03:00.0000000+00:00
                  logType: ActionSuccessful
              schema:
                $ref: '#/components/schemas/ActionLog'
            application/json:
              example:
                id: b9c3f647-5ce8-4d4c-9599-bd6addf6ff29
                origin:
                  taskId: c17a8537-68b0-460b-8cbb-a86724163c83
                  requestId: TestRequestId
                actionType: RunWorker
                runAsUserId: TestUserId
                loggedItems:
                - timestamp: 2024-01-02T03:00:00.0000000+00:00
                  logType: ActionSubmitted
                - timestamp: 2024-01-02T03:01:00.0000000+00:00
                  logType: ActionInitialising
                - timestamp: 2024-01-02T03:02:00.0000000+00:00
                  logType: ActionStarted
                - timestamp: 2024-01-02T03:02:00.0000000+00:00
                  logType: ActionProgressUpdate
                  details: Processing Luminesce query
                - timestamp: 2024-01-02T03:03:00.0000000+00:00
                  logType: ActionSuccessful
              schema:
                $ref: '#/components/schemas/ActionLog'
            text/json:
              example:
                id: b9c3f647-5ce8-4d4c-9599-bd6addf6ff29
                origin:
                  taskId: c17a8537-68b0-460b-8cbb-a86724163c83
                  requestId: TestRequestId
                actionType: RunWorker
                runAsUserId: TestUserId
                loggedItems:
                - timestamp: 2024-01-02T03:00:00.0000000+00:00
                  logType: ActionSubmitted
                - timestamp: 2024-01-02T03:01:00.0000000+00:00
                  logType: ActionInitialising
                - timestamp: 2024-01-02T03:02:00.0000000+00:00
                  logType: ActionStarted
                - timestamp: 2024-01-02T03:02:00.0000000+00:00
                  logType: ActionProgressUpdate
                  details: Processing Luminesce query
                - timestamp: 2024-01-02T03:03:00.0000000+00:00
                  logType: ActionSuccessful
              schema:
                $ref: '#/components/schemas/ActionLog'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Action Log not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetActionLogs: Get the Action Logs for an Action Id"
      tags:
      - Action Logs
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/eventhandlers:
    get:
      operationId: ListEventHandlers
      parameters:
      - description: The asAt datetime at which to list the Event Handlers. Defaults
          to return the latest version of each Event Handler if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: "Expression to filter the result set. Read more about filtering\
          \ results from LUSID here: https://support.lusid.com/filtering-results-from-lusid."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "When paginating, limit the number of returned results to this\
          \ many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "The pagination token to use to continue listing event handlers\
          \ from a previous call to list event handlers. This value is returned from\
          \ the previous call. If a pagination token is provided the sortBy, filter,\
          \ effectiveAt, and asAt fields must not have changed since the original\
          \ request."
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                values:
                - id:
                    scope: A1
                    code: ZZZ
                  version:
                    asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                    userIdCreated: User-1
                    requestIdCreated: RequestId-1
                    asAtModified: 2022-01-01T01:02:03.0000000+00:00
                    userIdModified: User-1
                    requestIdModified: RequestId-1
                    asAtVersionNumber: 1
                  displayName: An example Event Handler
                  description: Test
                  status: Active
                  eventMatchingPattern:
                    eventType: PortfolioCreated
                    filter: body.portfolioScope eq 'TestScope'
                  runAsUserId:
                    setTo: ExampleUserId
                  taskDefinitionId:
                    scope: A1
                    code: YYY
                  taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
                  taskActivity:
                    initialTrigger: InitialTrigger
                    type: CreateNewTask
                    correlationIds: []
                    taskFields: {}
                links: []
              schema:
                $ref: '#/components/schemas/PagedResourceListOfEventHandler'
          description: List of Event Handlers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListEventHandlers: List Event Handlers"
      tags:
      - Event Handlers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    post:
      operationId: CreateEventHandler
      requestBody:
        content:
          application/json-patch+json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
          application/json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
          text/json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
          application/*+json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
        description: The data to create an Event Handler
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id:
                  scope: A1
                  code: ZZZ
                version:
                  asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                  userIdCreated: User-1
                  requestIdCreated: RequestId-1
                  asAtModified: 2022-01-01T01:02:03.0000000+00:00
                  userIdModified: User-1
                  requestIdModified: RequestId-1
                  asAtVersionNumber: 1
                displayName: An example Event Handler
                description: Test
                status: Active
                eventMatchingPattern:
                  eventType: PortfolioCreated
                  filter: body.portfolioScope eq 'TestScope'
                runAsUserId:
                  setTo: ExampleUserId
                taskDefinitionId:
                  scope: A1
                  code: YYY
                taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
                taskActivity:
                  initialTrigger: InitialTrigger
                  type: CreateNewTask
                  correlationIds: []
                  taskFields: {}
              schema:
                $ref: '#/components/schemas/EventHandler'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] CreateEventHandler: Create a new Event Handler"
      tags:
      - Event Handlers
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/eventhandlers/{scope}/{code}:
    delete:
      description: If the Event Handler does not exist a failure will be returned
      operationId: DeleteEventHandler
      parameters:
      - description: Scope of the event handler to be deleted
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: Code of the event handler to be deleted
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Event Handler not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DeleteEventHandler: Delete an Event Handler"
      tags:
      - Event Handlers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    get:
      description: Will return a NotFound failure if the event handler does not exist
      operationId: GetEventHandler
      parameters:
      - description: Scope of the event handler
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: Code of the event handler
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The asAt datetime at which to retrieve the event handler. Defaults
          to returning the latest version of the event handler if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      responses:
        "201":
          content:
            application/json:
              example:
                id:
                  scope: A1
                  code: ZZZ
                version:
                  asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                  userIdCreated: User-1
                  requestIdCreated: RequestId-1
                  asAtModified: 2022-01-01T01:02:03.0000000+00:00
                  userIdModified: User-1
                  requestIdModified: RequestId-1
                  asAtVersionNumber: 1
                displayName: An example Event Handler
                description: Test
                status: Active
                eventMatchingPattern:
                  eventType: PortfolioCreated
                  filter: body.portfolioScope eq 'TestScope'
                runAsUserId:
                  setTo: ExampleUserId
                taskDefinitionId:
                  scope: A1
                  code: YYY
                taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
                taskActivity:
                  initialTrigger: InitialTrigger
                  type: CreateNewTask
                  correlationIds: []
                  taskFields: {}
              schema:
                $ref: '#/components/schemas/EventHandler'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetEventHandler: Get an Event Handler"
      tags:
      - Event Handlers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    put:
      operationId: UpdateEventHandler
      parameters:
      - description: The scope that identifies an Event Handler
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The code that identifies an Event Handler
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
          application/json:
            example:
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
          text/json:
            example:
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
          application/*+json:
            example:
              displayName: An example Event Handler
              description: Test
              status: Active
              eventMatchingPattern:
                eventType: PortfolioCreated
                filter: body.portfolioScope eq 'TestScope'
              runAsUserId:
                setTo: ExampleUserId
              taskDefinitionId:
                scope: A1
                code: YYY
              taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
              taskActivity:
                initialTrigger: InitialTrigger
                type: CreateNewTask
                correlationIds: []
                taskFields: {}
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
        description: The data to update an Event Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id:
                  scope: A1
                  code: ZZZ
                version:
                  asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                  userIdCreated: User-1
                  requestIdCreated: RequestId-1
                  asAtModified: 2022-01-01T01:02:03.0000000+00:00
                  userIdModified: User-1
                  requestIdModified: RequestId-1
                  asAtVersionNumber: 1
                displayName: An example Event Handler
                description: Test
                status: Active
                eventMatchingPattern:
                  eventType: PortfolioCreated
                  filter: body.portfolioScope eq 'TestScope'
                runAsUserId:
                  setTo: ExampleUserId
                taskDefinitionId:
                  scope: A1
                  code: YYY
                taskDefinitionAsAt: 9999-12-31T23:59:59.9999999+00:00
                taskActivity:
                  initialTrigger: InitialTrigger
                  type: CreateNewTask
                  correlationIds: []
                  taskFields: {}
              schema:
                $ref: '#/components/schemas/EventHandler'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Event Handler not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] UpdateEventHandler: Update an existing Event handler"
      tags:
      - Event Handlers
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/metadata/access/resources:
    get:
      description: Get the comprehensive set of resources that are available for access
        control
      operationId: ListAccessControlledResources
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListAccessControlledResources: Get resources available\
        \ for access control"
      tags:
      - Application Metadata
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/taskdefinitions:
    get:
      operationId: ListTaskDefinitions
      parameters:
      - description: The asAt datetime at which to list the Task Definitions. Defaults
          to return the latest version of each Task Definition if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: "Expression to filter the result set. Read more about filtering\
          \ results from LUSID here: https://support.lusid.com/filtering-results-from-lusid."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "A list of field names or properties to sort by, each suffixed\
          \ by \" ASC\" or \" DESC\""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "When paginating, limit the number of returned results to this\
          \ many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "The pagination token to use to continue listing task definitions\
          \ from a previous call to list task definitions. This value is returned\
          \ from the previous call. If a pagination token is provided the sortBy,\
          \ filter, effectiveAt, and asAt fields must not have changed since the original\
          \ request."
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                values:
                - id:
                    scope: A1
                    code: ZZZ
                  version:
                    asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                    userIdCreated: User-1
                    requestIdCreated: RequestId-1
                    asAtModified: 2022-01-01T01:02:03.0000000+00:00
                    userIdModified: User-1
                    requestIdModified: RequestId-1
                    asAtVersionNumber: 1
                  displayName: An example TaskDefinition
                  description: Test
                  states:
                  - name: Submitted
                  - name: InProgress
                  - name: SendingSurvey
                  - name: Done
                  - name: SurveyNotSent
                  - name: NotDone
                  fieldSchema:
                  - name: clientId
                    type: String
                  - name: assignee
                    type: String
                    readOnlyStates:
                      stateType: SelectedStates
                      selectedStates:
                      - Submitted
                      - Done
                      - SurveyNotSent
                      - NotDone
                  - name: resolutionDetail
                    type: String
                    readOnlyStates:
                      stateType: TerminalState
                  initialState:
                    name: Submitted
                    requiredFields:
                    - clientId
                  triggers:
                  - name: start
                    trigger:
                      type: External
                  - name: cancel
                    trigger:
                      type: External
                  - name: resolve
                    trigger:
                      type: External
                  - name: timeout
                    trigger:
                      type: External
                  - name: success
                    trigger:
                      type: External
                  - name: failure
                    trigger:
                      type: External
                  actions:
                  - name: health-check
                    runAsUserId: user-id
                    actionDetails:
                      type: RunWorker
                      workerId:
                        scope: Health
                        code: HealthCheckWorker
                      workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                      workerParameters: {}
                      workerStatusTriggers:
                        started: null
                        completedWithResults: null
                        completedNoResults: null
                        failedToStart: null
                        failedToComplete: null
                      childTaskConfigurations:
                      - taskDefinitionId:
                          scope: AAA
                          code: BBB
                        mapStackingKeyFrom: null
                        childTaskFields:
                          assignee:
                            mapFrom: foo
                            setTo: bar
                        resultMatchingPattern: null
                        taskDefinitionAsAt: null
                        initialTrigger: test-trigger
                      workerTimeout: 120
                  transitions:
                  - fromState: Submitted
                    toState: InProgress
                    trigger: start
                    guard: "fields['assignee'] exists AND fields['assignee'] NOT eq\
                      \ ''"
                  - fromState: InProgress
                    toState: SendingSurvey
                    trigger: resolve
                    guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                      \ NOT eq ''"
                    action: health-check
                  - fromState: SendingSurvey
                    toState: Done
                    trigger: success
                  - fromState: SendingSurvey
                    toState: SurveyNotSent
                    trigger: failure
                  - fromState: SendingSurvey
                    toState: NotDone
                    trigger: timeout
                  - fromState: InProgress
                    toState: NotDone
                    trigger: cancel
                    guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                      \ NOT eq ''"
                links: []
              schema:
                $ref: '#/components/schemas/PagedResourceListOfTaskDefinition'
          description: List of Task Definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: No Task Definitions found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListTaskDefinitions: List Task Definitions"
      tags:
      - Task Definitions
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    post:
      operationId: CreateTaskDefinition
      requestBody:
        content:
          application/json-patch+json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/CreateTaskDefinitionRequest'
          application/json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/CreateTaskDefinitionRequest'
          text/json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/CreateTaskDefinitionRequest'
          application/*+json:
            example:
              id:
                scope: A1
                code: ZZZ
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/CreateTaskDefinitionRequest'
        description: The data to create a Task Definition
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id:
                  scope: A1
                  code: ZZZ
                version:
                  asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                  userIdCreated: User-1
                  requestIdCreated: RequestId-1
                  asAtModified: 2022-01-01T01:02:03.0000000+00:00
                  userIdModified: User-1
                  requestIdModified: RequestId-1
                  asAtVersionNumber: 1
                displayName: An example TaskDefinition
                description: Test
                states:
                - name: Submitted
                - name: InProgress
                - name: SendingSurvey
                - name: Done
                - name: SurveyNotSent
                - name: NotDone
                fieldSchema:
                - name: clientId
                  type: String
                - name: assignee
                  type: String
                  readOnlyStates:
                    stateType: SelectedStates
                    selectedStates:
                    - Submitted
                    - Done
                    - SurveyNotSent
                    - NotDone
                - name: resolutionDetail
                  type: String
                  readOnlyStates:
                    stateType: TerminalState
                initialState:
                  name: Submitted
                  requiredFields:
                  - clientId
                triggers:
                - name: start
                  trigger:
                    type: External
                - name: cancel
                  trigger:
                    type: External
                - name: resolve
                  trigger:
                    type: External
                - name: timeout
                  trigger:
                    type: External
                - name: success
                  trigger:
                    type: External
                - name: failure
                  trigger:
                    type: External
                actions:
                - name: health-check
                  runAsUserId: user-id
                  actionDetails:
                    type: RunWorker
                    workerId:
                      scope: Health
                      code: HealthCheckWorker
                    workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                    workerParameters: {}
                    workerStatusTriggers:
                      started: null
                      completedWithResults: null
                      completedNoResults: null
                      failedToStart: null
                      failedToComplete: null
                    childTaskConfigurations:
                    - taskDefinitionId:
                        scope: AAA
                        code: BBB
                      mapStackingKeyFrom: null
                      childTaskFields:
                        assignee:
                          mapFrom: foo
                          setTo: bar
                      resultMatchingPattern: null
                      taskDefinitionAsAt: null
                      initialTrigger: test-trigger
                    workerTimeout: 120
                transitions:
                - fromState: Submitted
                  toState: InProgress
                  trigger: start
                  guard: "fields['assignee'] exists AND fields['assignee'] NOT eq\
                    \ ''"
                - fromState: InProgress
                  toState: SendingSurvey
                  trigger: resolve
                  guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                    \ NOT eq ''"
                  action: health-check
                - fromState: SendingSurvey
                  toState: Done
                  trigger: success
                - fromState: SendingSurvey
                  toState: SurveyNotSent
                  trigger: failure
                - fromState: SendingSurvey
                  toState: NotDone
                  trigger: timeout
                - fromState: InProgress
                  toState: NotDone
                  trigger: cancel
                  guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                    \ NOT eq ''"
              schema:
                $ref: '#/components/schemas/TaskDefinition'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] CreateTaskDefinition: Create a new Task Definition"
      tags:
      - Task Definitions
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/taskdefinitions/{scope}/{code}:
    delete:
      operationId: DeleteTaskDefinition
      parameters:
      - description: The scope that identifies a Task Definition
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The code that identifies a Task Definition
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 512
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task Definition not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DeleteTaskDefinition: Delete a Task Definition"
      tags:
      - Task Definitions
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    get:
      operationId: GetTaskDefinition
      parameters:
      - description: The scope that identifies a Task Definition
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The code that identifies a Task Definition
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The asAt datetime at which to retrieve the Task Definition. Defaults
          to returning the latest version of the Task Definition if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            application/json:
              example:
                id:
                  scope: A1
                  code: ZZZ
                version:
                  asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                  userIdCreated: User-1
                  requestIdCreated: RequestId-1
                  asAtModified: 2022-01-01T01:02:03.0000000+00:00
                  userIdModified: User-1
                  requestIdModified: RequestId-1
                  asAtVersionNumber: 1
                displayName: An example TaskDefinition
                description: Test
                states:
                - name: Submitted
                - name: InProgress
                - name: SendingSurvey
                - name: Done
                - name: SurveyNotSent
                - name: NotDone
                fieldSchema:
                - name: clientId
                  type: String
                - name: assignee
                  type: String
                  readOnlyStates:
                    stateType: SelectedStates
                    selectedStates:
                    - Submitted
                    - Done
                    - SurveyNotSent
                    - NotDone
                - name: resolutionDetail
                  type: String
                  readOnlyStates:
                    stateType: TerminalState
                initialState:
                  name: Submitted
                  requiredFields:
                  - clientId
                triggers:
                - name: start
                  trigger:
                    type: External
                - name: cancel
                  trigger:
                    type: External
                - name: resolve
                  trigger:
                    type: External
                - name: timeout
                  trigger:
                    type: External
                - name: success
                  trigger:
                    type: External
                - name: failure
                  trigger:
                    type: External
                actions:
                - name: health-check
                  runAsUserId: user-id
                  actionDetails:
                    type: RunWorker
                    workerId:
                      scope: Health
                      code: HealthCheckWorker
                    workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                    workerParameters: {}
                    workerStatusTriggers:
                      started: null
                      completedWithResults: null
                      completedNoResults: null
                      failedToStart: null
                      failedToComplete: null
                    childTaskConfigurations:
                    - taskDefinitionId:
                        scope: AAA
                        code: BBB
                      mapStackingKeyFrom: null
                      childTaskFields:
                        assignee:
                          mapFrom: foo
                          setTo: bar
                      resultMatchingPattern: null
                      taskDefinitionAsAt: null
                      initialTrigger: test-trigger
                    workerTimeout: 120
                transitions:
                - fromState: Submitted
                  toState: InProgress
                  trigger: start
                  guard: "fields['assignee'] exists AND fields['assignee'] NOT eq\
                    \ ''"
                - fromState: InProgress
                  toState: SendingSurvey
                  trigger: resolve
                  guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                    \ NOT eq ''"
                  action: health-check
                - fromState: SendingSurvey
                  toState: Done
                  trigger: success
                - fromState: SendingSurvey
                  toState: SurveyNotSent
                  trigger: failure
                - fromState: SendingSurvey
                  toState: NotDone
                  trigger: timeout
                - fromState: InProgress
                  toState: NotDone
                  trigger: cancel
                  guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                    \ NOT eq ''"
              schema:
                $ref: '#/components/schemas/TaskDefinition'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task Definition not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetTaskDefinition: Get a Task Definition"
      tags:
      - Task Definitions
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    put:
      operationId: UpdateTaskDefinition
      parameters:
      - description: The scope that identifies a Task Definition
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The code that identifies a Task Definition
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/UpdateTaskDefinitionRequest'
          application/json:
            example:
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/UpdateTaskDefinitionRequest'
          text/json:
            example:
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/UpdateTaskDefinitionRequest'
          application/*+json:
            example:
              displayName: An example TaskDefinition
              description: Test
              states:
              - name: Submitted
              - name: InProgress
              - name: SendingSurvey
              - name: Done
              - name: SurveyNotSent
              - name: NotDone
              fieldSchema:
              - name: clientId
                type: String
              - name: assignee
                type: String
                readOnlyStates:
                  stateType: SelectedStates
                  selectedStates:
                  - Submitted
                  - Done
                  - SurveyNotSent
                  - NotDone
              - name: resolutionDetail
                type: String
                readOnlyStates:
                  stateType: TerminalState
              initialState:
                name: Submitted
                requiredFields:
                - clientId
              triggers:
              - name: start
                trigger:
                  type: External
              - name: cancel
                trigger:
                  type: External
              - name: resolve
                trigger:
                  type: External
              - name: timeout
                trigger:
                  type: External
              - name: success
                trigger:
                  type: External
              - name: failure
                trigger:
                  type: External
              transitions:
              - fromState: Submitted
                toState: InProgress
                trigger: start
                guard: "fields['assignee'] exists AND fields['assignee'] NOT eq ''"
              - fromState: InProgress
                toState: SendingSurvey
                trigger: resolve
                guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                  \ NOT eq ''"
                action: health-check
              - fromState: SendingSurvey
                toState: Done
                trigger: success
              - fromState: SendingSurvey
                toState: SurveyNotSent
                trigger: failure
              - fromState: SendingSurvey
                toState: NotDone
                trigger: timeout
              - fromState: InProgress
                toState: NotDone
                trigger: cancel
                guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                  \ NOT eq ''"
              actions:
              - name: health-check
                runAsUserId: user-id
                actionDetails:
                  type: RunWorker
                  workerId:
                    scope: Health
                    code: HealthCheckWorker
                  workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                  workerParameters: {}
                  workerStatusTriggers:
                    started: null
                    completedWithResults: null
                    completedNoResults: null
                    failedToStart: null
                    failedToComplete: null
                  childTaskConfigurations:
                  - taskDefinitionId:
                      scope: AAA
                      code: BBB
                    mapStackingKeyFrom: null
                    childTaskFields:
                      assignee:
                        mapFrom: foo
                        setTo: bar
                    resultMatchingPattern: null
                    taskDefinitionAsAt: null
                    initialTrigger: test-trigger
                  workerTimeout: 120
            schema:
              $ref: '#/components/schemas/UpdateTaskDefinitionRequest'
        description: The data to update a Task Definition
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id:
                  scope: A1
                  code: ZZZ
                version:
                  asAtCreated: 2022-01-01T01:02:03.0000000+00:00
                  userIdCreated: User-1
                  requestIdCreated: RequestId-1
                  asAtModified: 2022-01-01T01:02:03.0000000+00:00
                  userIdModified: User-1
                  requestIdModified: RequestId-1
                  asAtVersionNumber: 1
                displayName: An example TaskDefinition
                description: Test
                states:
                - name: Submitted
                - name: InProgress
                - name: SendingSurvey
                - name: Done
                - name: SurveyNotSent
                - name: NotDone
                fieldSchema:
                - name: clientId
                  type: String
                - name: assignee
                  type: String
                  readOnlyStates:
                    stateType: SelectedStates
                    selectedStates:
                    - Submitted
                    - Done
                    - SurveyNotSent
                    - NotDone
                - name: resolutionDetail
                  type: String
                  readOnlyStates:
                    stateType: TerminalState
                initialState:
                  name: Submitted
                  requiredFields:
                  - clientId
                triggers:
                - name: start
                  trigger:
                    type: External
                - name: cancel
                  trigger:
                    type: External
                - name: resolve
                  trigger:
                    type: External
                - name: timeout
                  trigger:
                    type: External
                - name: success
                  trigger:
                    type: External
                - name: failure
                  trigger:
                    type: External
                actions:
                - name: health-check
                  runAsUserId: user-id
                  actionDetails:
                    type: RunWorker
                    workerId:
                      scope: Health
                      code: HealthCheckWorker
                    workerAsAt: 2022-01-01T01:02:03.0000000+00:00
                    workerParameters: {}
                    workerStatusTriggers:
                      started: null
                      completedWithResults: null
                      completedNoResults: null
                      failedToStart: null
                      failedToComplete: null
                    childTaskConfigurations:
                    - taskDefinitionId:
                        scope: AAA
                        code: BBB
                      mapStackingKeyFrom: null
                      childTaskFields:
                        assignee:
                          mapFrom: foo
                          setTo: bar
                      resultMatchingPattern: null
                      taskDefinitionAsAt: null
                      initialTrigger: test-trigger
                    workerTimeout: 120
                transitions:
                - fromState: Submitted
                  toState: InProgress
                  trigger: start
                  guard: "fields['assignee'] exists AND fields['assignee'] NOT eq\
                    \ ''"
                - fromState: InProgress
                  toState: SendingSurvey
                  trigger: resolve
                  guard: "fields['resolutionDetail'] exists AND fields['resolutionDetail']\
                    \ NOT eq ''"
                  action: health-check
                - fromState: SendingSurvey
                  toState: Done
                  trigger: success
                - fromState: SendingSurvey
                  toState: SurveyNotSent
                  trigger: failure
                - fromState: SendingSurvey
                  toState: NotDone
                  trigger: timeout
                - fromState: InProgress
                  toState: NotDone
                  trigger: cancel
                  guard: "fields['cancellationDetail'] exists AND fields['cancellationDetail']\
                    \ NOT eq ''"
              schema:
                $ref: '#/components/schemas/TaskDefinition'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task Definition not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] UpdateTaskDefinition: Update an existing Task Definition"
      tags:
      - Task Definitions
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/taskdefinitions/{scope}/{code}/tasks:
    get:
      operationId: ListTasksForTaskDefinition
      parameters:
      - description: The scope that identifies a Task Definition
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The code that identifies a Task Definition
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The asAt datetime at which to list the Tasks. Defaults to return
          the latest version of each Task if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfTask'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: No tasks found for this Task Definition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListTasksForTaskDefinition: List Tasks for a Task Definition"
      tags:
      - Task Definitions
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/tasks:
    get:
      operationId: ListTasks
      parameters:
      - description: The asAt datetime at which to list the Tasks. Defaults to return
          the latest version of each Task if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: "Expression to filter the result set. Read more about filtering\
          \ results from LUSID here: https://support.lusid.com/filtering-results-from-lusid."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "A list of field names or properties to sort by, each optionally\
          \ suffixed by \" ASC\" or \" DESC\""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "When paginating, limit the number of returned results to this\
          \ many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "The pagination token to use to continue listing tasks from a\
          \ previous call to list tasks. This value is returned from the previous\
          \ call. If a pagination token is provided the sortBy, filter, effectiveAt,\
          \ and asAt fields must not have changed since the original request."
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResourceListOfTask'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: No Tasks found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "ListTasks: List Tasks"
      tags:
      - Tasks
      x-fbn-apistatus: Stable
      x-accepts: application/json
    post:
      operationId: CreateTask
      parameters:
      - description: The name of the Trigger to invoke
        explode: true
        in: query
        name: trigger
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              taskDefinitionId:
                scope: A1
                code: ZZZ
              correlationIds:
              - correlation-id
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
          application/json:
            example:
              taskDefinitionId:
                scope: A1
                code: ZZZ
              correlationIds:
              - correlation-id
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
          text/json:
            example:
              taskDefinitionId:
                scope: A1
                code: ZZZ
              correlationIds:
              - correlation-id
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
          application/*+json:
            example:
              taskDefinitionId:
                scope: A1
                code: ZZZ
              correlationIds:
              - correlation-id
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        description: Request to create Task
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: 4aa4b4e1-866a-493e-8d33-51f9e47a0843
                taskDefinitionId:
                  scope: A1
                  code: ZZZ
                taskDefinitionVersion:
                  asAtModified: 0001-01-01T00:00:00.0000000+00:00
                taskDefinitionDisplayName: Test Definition
                state: foo
                ultimateParentTask:
                  id: 4aa4b4e1-866a-493e-8d33-51f9e47a0843
                  taskDefinitionId:
                    scope: A1
                    code: ZZZ
                  taskDefinitionVersion:
                    asAtModified: 0001-01-01T00:00:00.0000000+00:00
                  taskDefinitionDisplayName: Test Definition
                  state: foo
                correlationIds:
                - correlation-id
                terminalState: false
                asAtLastTransition: 2022-01-01T01:02:03.0000000+00:00
              schema:
                $ref: '#/components/schemas/Task'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] CreateTask: Create a new Task"
      tags:
      - Tasks
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/tasks/$delete:
    post:
      operationId: DeleteTasks
      requestBody:
        content:
          application/json-patch+json:
            example:
              taskIds:
              - TaskInstanceId
            schema:
              $ref: '#/components/schemas/DeleteTasksRequest'
          application/json:
            example:
              taskIds:
              - TaskInstanceId
            schema:
              $ref: '#/components/schemas/DeleteTasksRequest'
          text/json:
            example:
              taskIds:
              - TaskInstanceId
            schema:
              $ref: '#/components/schemas/DeleteTasksRequest'
          application/*+json:
            example:
              taskIds:
              - TaskInstanceId
            schema:
              $ref: '#/components/schemas/DeleteTasksRequest'
        description: Request with the task instance ids to delete.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DeleteTasks: Batch Delete Tasks"
      tags:
      - Tasks
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/tasks/{id}:
    delete:
      operationId: DeleteTask
      parameters:
      - description: The identifier for the Task to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DeleteTask: Delete a Task"
      tags:
      - Tasks
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    get:
      operationId: GetTask
      parameters:
      - description: Id of the Task to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        style: simple
      - description: The asAt datetime at which to retrieve the Task. Defaults to
          returning the latest version of the Task if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4aa4b4e1-866a-493e-8d33-51f9e47a0843
                taskDefinitionId:
                  scope: A1
                  code: ZZZ
                taskDefinitionVersion:
                  asAtModified: 0001-01-01T00:00:00.0000000+00:00
                taskDefinitionDisplayName: Test Definition
                state: foo
                ultimateParentTask:
                  id: 4aa4b4e1-866a-493e-8d33-51f9e47a0843
                  taskDefinitionId:
                    scope: A1
                    code: ZZZ
                  taskDefinitionVersion:
                    asAtModified: 0001-01-01T00:00:00.0000000+00:00
                  taskDefinitionDisplayName: Test Definition
                  state: foo
                correlationIds:
                - correlation-id
                terminalState: false
                asAtLastTransition: 2022-01-01T01:02:03.0000000+00:00
              schema:
                $ref: '#/components/schemas/Task'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetTask: Get a Task"
      tags:
      - Tasks
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    post:
      operationId: UpdateTask
      parameters:
      - description: Id of the Task to act upon
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: trigger
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
                value: bob
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          application/json:
            example:
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
                value: bob
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          text/json:
            example:
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
                value: bob
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          application/*+json:
            example:
              fields:
              - name: clientId
                value: zzz123
              - name: assignee
                value: bob
              - name: resolutionDetail
                value: ""
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        description: The details of the request
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4aa4b4e1-866a-493e-8d33-51f9e47a0843
                taskDefinitionId:
                  scope: A1
                  code: ZZZ
                taskDefinitionVersion:
                  asAtModified: 0001-01-01T00:00:00.0000000+00:00
                taskDefinitionDisplayName: Test Definition
                state: foo
                ultimateParentTask:
                  id: 4aa4b4e1-866a-493e-8d33-51f9e47a0843
                  taskDefinitionId:
                    scope: A1
                    code: ZZZ
                  taskDefinitionVersion:
                    asAtModified: 0001-01-01T00:00:00.0000000+00:00
                  taskDefinitionDisplayName: Test Definition
                  state: foo
                correlationIds:
                - correlation-id
                terminalState: false
                asAtLastTransition: 2022-01-01T01:02:03.0000000+00:00
              schema:
                $ref: '#/components/schemas/Task'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] UpdateTask: Update a Task"
      tags:
      - Tasks
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/tasks/{id}/history:
    get:
      operationId: GetTaskHistory
      parameters:
      - description: The Task Id for which to get the history
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        style: simple
      - description: The asAt datetime of the oldest change to retrieve. Defaults
          to returning the latest version of the Task if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      responses:
        "200":
          content:
            application/json:
              example:
                values:
                - asAtModified: 2024-01-02T03:00:00.0000000+00:00
                  userIdModified: UserId1
                  requestIdModified: RequestId1
                  asAtVersionNumber: 2
                  action: Update
                  attributeName: State
                  previousValue: Ready
                  newValue: Started
                - asAtModified: 2024-01-02T03:00:00.0000000+00:00
                  userIdModified: UserId1
                  requestIdModified: RequestId1
                  asAtVersionNumber: 2
                  action: Update
                  attributeName: "Fields[FieldA]"
                  previousValue: A
                  newValue: B
                - asAtModified: 2024-01-02T03:01:00.0000000+00:00
                  userIdModified: UserId2
                  requestIdModified: RequestId2
                  asAtVersionNumber: 3
                  action: Update
                  attributeName: "Fields[FieldA]"
                  previousValue: B
                  newValue: C
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfChangeItem'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Task not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetTaskHistory: Get the history of a Task"
      tags:
      - Tasks
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/workers:
    get:
      operationId: ListWorkers
      parameters:
      - description: The asAt datetime at which to list the Workers. Defaults to return
          the latest version of each Worker if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: "Expression to filter the result set. Read more about filtering\
          \ results from LUSID here: https://support.lusid.com/filtering-results-from-lusid."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "A list of field names or properties to sort by, each optionally\
          \ suffixed by \" ASC\" or \" DESC\""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "When paginating, limit the number of returned results to this\
          \ many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "The pagination token to use to continue listing workers from\
          \ a previous call to list workers. This value is returned from the previous\
          \ call. If a pagination token is provided the sortBy, filter, effectiveAt,\
          \ and asAt fields must not have changed since the original request."
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                values:
                - id:
                    scope: Health
                    code: HealthCheckWorker
                  displayName: ASP.Net Health Check worker
                  description: Calls /health to check a service is running
                  workerConfiguration:
                    type: HealthCheck
                    url: http://localhost.lusid.com:8282/health
                  version:
                    asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                    userIdCreated: UserId123
                    requestIdCreated: RequestId123
                    asAtModified: 2023-01-01T12:00:00.0000000+00:00
                    userIdModified: UserId123
                    requestIdModified: RequestId123
                    asAtVersionNumber: 1
                  parameters: []
                  resultFields: []
                links: []
              schema:
                $ref: '#/components/schemas/PagedResourceListOfWorker'
            application/json:
              example:
                values:
                - id:
                    scope: Health
                    code: HealthCheckWorker
                  displayName: ASP.Net Health Check worker
                  description: Calls /health to check a service is running
                  workerConfiguration:
                    type: HealthCheck
                    url: http://localhost.lusid.com:8282/health
                  version:
                    asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                    userIdCreated: UserId123
                    requestIdCreated: RequestId123
                    asAtModified: 2023-01-01T12:00:00.0000000+00:00
                    userIdModified: UserId123
                    requestIdModified: RequestId123
                    asAtVersionNumber: 1
                  parameters: []
                  resultFields: []
                links: []
              schema:
                $ref: '#/components/schemas/PagedResourceListOfWorker'
            text/json:
              example:
                values:
                - id:
                    scope: Health
                    code: HealthCheckWorker
                  displayName: ASP.Net Health Check worker
                  description: Calls /health to check a service is running
                  workerConfiguration:
                    type: HealthCheck
                    url: http://localhost.lusid.com:8282/health
                  version:
                    asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                    userIdCreated: UserId123
                    requestIdCreated: RequestId123
                    asAtModified: 2023-01-01T12:00:00.0000000+00:00
                    userIdModified: UserId123
                    requestIdModified: RequestId123
                    asAtVersionNumber: 1
                  parameters: []
                  resultFields: []
                links: []
              schema:
                $ref: '#/components/schemas/PagedResourceListOfWorker'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListWorkers: List Workers"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    post:
      description: If the Worker already exists a failure will be returned
      operationId: CreateWorker
      requestBody:
        content:
          application/json-patch+json:
            example:
              id:
                scope: Health
                code: HealthCheckWorker
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/CreateWorkerRequest'
          application/json:
            example:
              id:
                scope: Health
                code: HealthCheckWorker
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/CreateWorkerRequest'
          text/json:
            example:
              id:
                scope: Health
                code: HealthCheckWorker
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/CreateWorkerRequest'
          application/*+json:
            example:
              id:
                scope: Health
                code: HealthCheckWorker
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/CreateWorkerRequest'
        description: Worker to be created
        required: true
      responses:
        "201":
          content:
            text/plain:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
            application/json:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
            text/json:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
          description: Created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] CreateWorker: Create a new Worker"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/workers/{runId}/$result:
    get:
      operationId: GetWorkerResult
      parameters:
      - description: The ID returned when calling Run Worker
        explode: false
        in: path
        name: runId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              example:
                workerStatus: CompletedNoResults
                results:
                - HttpStatusCode: "200"
                statusDetail: WorkerStatus
              schema:
                $ref: '#/components/schemas/GetWorkerResultResponse'
            application/json:
              example:
                workerStatus: CompletedNoResults
                results:
                - HttpStatusCode: "200"
                statusDetail: WorkerStatus
              schema:
                $ref: '#/components/schemas/GetWorkerResultResponse'
            text/json:
              example:
                workerStatus: CompletedNoResults
                results:
                - HttpStatusCode: "200"
                statusDetail: WorkerStatus
              schema:
                $ref: '#/components/schemas/GetWorkerResultResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetWorkerResult: Get the status of a specific run of\
        \ a worker with any relevant results"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/workers/{scope}/{code}:
    delete:
      description: If the Worker does not exist a failure will be returned
      operationId: DeleteWorker
      parameters:
      - description: Scope of the worker to be deleted
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: Code of the worker to be deleted
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DeletedEntityResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Worker not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DeleteWorker: Delete a Worker"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    get:
      description: Will return a NotFound failure if the Worker does not exist
      operationId: GetWorker
      parameters:
      - description: Scope of the worker
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: Code of the worker
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The asAt datetime at which to retrieve the Worker. Defaults to
          returning the latest version of the Worker if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      responses:
        "201":
          content:
            text/plain:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
            application/json:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
            text/json:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
          description: Created
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetWorker: Get a Worker"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    put:
      description: If the Worker does not exist a failure will be returned
      operationId: UpdateWorker
      parameters:
      - description: Scope of the worker to be updated
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: Code of the worker to be updated
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/UpdateWorkerRequest'
          application/json:
            example:
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/UpdateWorkerRequest'
          text/json:
            example:
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/UpdateWorkerRequest'
          application/*+json:
            example:
              displayName: ASP.Net Health Check worker
              description: Calls /health to check a service is running
              workerConfiguration:
                type: HealthCheck
                url: http://localhost.lusid.com:8282
            schema:
              $ref: '#/components/schemas/UpdateWorkerRequest'
        description: State of the updated worker
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
            application/json:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
            text/json:
              example:
                id:
                  scope: Health
                  code: HealthCheckWorker
                displayName: ASP.Net Health Check worker
                description: Calls /health to check a service is running
                workerConfiguration:
                  type: HealthCheck
                  url: http://localhost.lusid.com:8282/health
                version:
                  asAtCreated: 2023-01-01T12:00:00.0000000+00:00
                  userIdCreated: UserId123
                  requestIdCreated: RequestId123
                  asAtModified: 2023-01-01T12:00:00.0000000+00:00
                  userIdModified: UserId123
                  requestIdModified: RequestId123
                  asAtVersionNumber: 1
                parameters: []
                resultFields: []
              schema:
                $ref: '#/components/schemas/Worker'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        "404":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Worker not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] UpdateWorker: Update a Worker"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/workers/{scope}/{code}/$run:
    post:
      operationId: RunWorker
      parameters:
      - description: Scope of the worker
        explode: false
        in: path
        name: scope
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: Code of the worker
        explode: false
        in: path
        name: code
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        style: simple
      - description: The asAt datetime at which to retrieve the Worker. Defaults to
          returning the latest version of the Worker if not specified.
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      requestBody:
        content:
          application/json-patch+json:
            example:
              parameters:
              - name: test-parameter
                value: true
              workerTimeout: 120
            schema:
              $ref: '#/components/schemas/RunWorkerRequest'
          application/json:
            example:
              parameters:
              - name: test-parameter
                value: true
              workerTimeout: 120
            schema:
              $ref: '#/components/schemas/RunWorkerRequest'
          text/json:
            example:
              parameters:
              - name: test-parameter
                value: true
              workerTimeout: 120
            schema:
              $ref: '#/components/schemas/RunWorkerRequest'
          application/*+json:
            example:
              parameters:
              - name: test-parameter
                value: true
              workerTimeout: 120
            schema:
              $ref: '#/components/schemas/RunWorkerRequest'
        description: ""
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                runId: 71beb2cb-be3a-4662-b8ee-e5ded63b957a
              schema:
                $ref: '#/components/schemas/RunWorkerResponse'
            application/json:
              example:
                runId: 71beb2cb-be3a-4662-b8ee-e5ded63b957a
              schema:
                $ref: '#/components/schemas/RunWorkerResponse'
            text/json:
              example:
                runId: 71beb2cb-be3a-4662-b8ee-e5ded63b957a
              schema:
                $ref: '#/components/schemas/RunWorkerResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] RunWorker: Run a Worker"
      tags:
      - Workers
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
components:
  schemas:
    AccessControlledAction:
      additionalProperties: false
      example:
        limitedSet:
        - identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        - identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        description: description
        action:
          activity: activity
          scope: scope
          entity: entity
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
      properties:
        description:
          minLength: 1
          type: string
        action:
          $ref: '#/components/schemas/ActionId'
        limitedSet:
          items:
            $ref: '#/components/schemas/IdSelectorDefinition'
          nullable: true
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - action
      - description
      type: object
    AccessControlledResource:
      additionalProperties: false
      example:
        application: application
        name: name
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        actions:
        - limitedSet:
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          description: description
          action:
            activity: activity
            scope: scope
            entity: entity
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
        - limitedSet:
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          description: description
          action:
            activity: activity
            scope: scope
            entity: entity
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
        identifierParts:
        - displayName: displayName
          name: name
          index: 0
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          required: true
        - displayName: displayName
          name: name
          index: 0
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          required: true
      properties:
        application:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          minLength: 1
          type: string
        actions:
          items:
            $ref: '#/components/schemas/AccessControlledAction'
          type: array
        identifierParts:
          items:
            $ref: '#/components/schemas/IdentifierPartSchema'
          nullable: true
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - actions
      - description
      type: object
    ActionDefinition:
      additionalProperties: false
      description: Defines the Actions for a Task
      example:
        name: name
        runAsUserId: runAsUserId
        actionDetails:
          type: type
      properties:
        name:
          description: The Name of this Action
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        runAsUserId:
          description: "The ID of the user that this action will be performed by.\
            \ If not specified, the actions will be performed by the \"current user\"\
            ."
          maxLength: 1024
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        actionDetails:
          $ref: '#/components/schemas/ActionDetails'
      required:
      - actionDetails
      - name
      type: object
    ActionDefinitionResponse:
      additionalProperties: false
      description: Defines the Actions for a Task in a read-only form
      example:
        name: name
        runAsUserId: runAsUserId
        actionDetails:
          type: type
      properties:
        name:
          description: The Name of this Action
          nullable: true
          type: string
        runAsUserId:
          description: "The ID of the user that this action will be performed by.\
            \ If not specified, the actions will be performed by the \"current user\"\
            ."
          nullable: true
          type: string
        actionDetails:
          $ref: '#/components/schemas/ActionDetailsResponse'
      type: object
    ActionDetails:
      additionalProperties: false
      description: Abstracts the kinds of Actions available
      example:
        type: type
      oneOf:
      - $ref: '#/components/schemas/CreateChildTasksAction'
      - $ref: '#/components/schemas/RunWorkerAction'
      - $ref: '#/components/schemas/TriggerParentTaskAction'
      properties:
        type:
          description: Type name for this Action
          minLength: 1
          type: string
      required:
      - type
      type: object
    ActionDetailsResponse:
      additionalProperties: false
      description: Abstracts the kinds of Actions available in a read-only form
      example:
        type: type
      oneOf:
      - $ref: '#/components/schemas/CreateChildTasksActionResponse'
      - $ref: '#/components/schemas/RunWorkerActionResponse'
      - $ref: '#/components/schemas/TriggerParentTaskActionResponse'
      properties:
        type:
          description: Type name for this Action
          nullable: true
          type: string
      type: object
    ActionId:
      additionalProperties: false
      example:
        activity: activity
        scope: scope
        entity: entity
      properties:
        scope:
          maxLength: 100
          minLength: 3
          type: string
        activity:
          maxLength: 25
          minLength: 3
          type: string
        entity:
          maxLength: 40
          minLength: 3
          type: string
      required:
      - activity
      - entity
      - scope
      type: object
    ActionLog:
      additionalProperties: false
      description: An Action Log contains the processing history of an Action
      example:
        actionType: actionType
        loggedItems:
        - logType: logType
          details: details
          timestamp: 2000-01-23T04:56:07.000+00:00
        - logType: logType
          details: details
          timestamp: 2000-01-23T04:56:07.000+00:00
        origin:
          requestId: requestId
          taskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        runAsUserId: runAsUserId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: Unique identifier of the Action
          format: uuid
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: string
        origin:
          $ref: '#/components/schemas/ActionLogOrigin'
        actionType:
          description: The type of the Action
          minLength: 1
          type: string
        runAsUserId:
          description: "The ID of the user that the Action was performed by.\r\nIf\
            \ not specified, the actions were performed by the \"current user\"."
          maxLength: 1024
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        loggedItems:
          description: The logged items for this Action
          items:
            $ref: '#/components/schemas/ActionLogItem'
          type: array
      required:
      - actionType
      - id
      - loggedItems
      - origin
      type: object
    ActionLogItem:
      additionalProperties: false
      description: A log item for a given Action Log
      example:
        logType: logType
        details: details
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          description: The timestamp of the log item
          format: date-time
          type: string
        logType:
          description: The type of log item
          minLength: 1
          type: string
        details:
          description: The details of the log item
          nullable: true
          type: string
      required:
      - logType
      - timestamp
      type: object
    ActionLogOrigin:
      additionalProperties: false
      description: The Action Log Origin contains information about how the Action
        was created
      example:
        requestId: requestId
        taskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        taskId:
          description: The Id of the Task that created this Action
          format: uuid
          nullable: true
          type: string
        requestId:
          description: "The request Id of the request that caused this Action to be\
            \ triggered.\r\nThis could be the original request that caused a sequence\
            \ of Actions that resulted in this Action"
          minLength: 1
          type: string
      required:
      - requestId
      type: object
    ChangeItem:
      additionalProperties: false
      description: Defines a change that occured to a Task
      example:
        asAtModified: 2000-01-23T04:56:07.000+00:00
        newValue: ""
        userIdModified: userIdModified
        asAtVersionNumber: 0
        action: action
        attributeName: attributeName
        requestIdModified: requestIdModified
        previousValue: ""
      properties:
        asAtModified:
          description: The AsAt time of the change
          format: date-time
          type: string
        userIdModified:
          description: The User ID that performed the change
          minLength: 1
          type: string
        requestIdModified:
          description: The Request ID of the request that caused the change
          minLength: 1
          type: string
        asAtVersionNumber:
          description: The AsAt Version number
          format: int32
          type: integer
        action:
          description: The Action that resulted in the change
          minLength: 1
          type: string
        attributeName:
          description: The name of the attribute that has been change
          minLength: 1
          type: string
        previousValue:
          description: The value of the attribute prior to the change
          nullable: true
        newValue:
          description: The value of the attribute following the change
      required:
      - action
      - asAtModified
      - asAtVersionNumber
      - attributeName
      - newValue
      - requestIdModified
      - userIdModified
      type: object
    CreateChildTaskConfiguration:
      additionalProperties: false
      description: Create Child Task Configuration
      properties:
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionAsAt:
          description: TaskDefinition AsAt timestamp
          format: date-time
          nullable: true
          type: string
        initialTrigger:
          description: The Initial Trigger for automatic start
          maxLength: 1024
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        childTaskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: Field Mappings
          nullable: true
          type: object
        mapStackingKeyFrom:
          description: "If present, the value of this field on the parent task will\
            \ be the Stacking Key on any created child tasks"
          nullable: true
          type: string
      required:
      - taskDefinitionId
      type: object
    CreateChildTasksAction:
      additionalProperties: false
      description: Defines a Create Child Tasks Action
      properties:
        type:
          description: Type name for this Action
          enum:
          - CreateChildTasks
          - RunWorker
          - TriggerParentTask
          minLength: 1
          type: string
        childTaskConfigurations:
          description: The Child Task Configurations
          items:
            $ref: '#/components/schemas/CreateChildTaskConfiguration'
          type: array
      required:
      - childTaskConfigurations
      - type
      type: object
    CreateChildTasksActionResponse:
      additionalProperties: false
      description: Defines a read-only Create Child Tasks Action
      properties:
        type:
          description: Type name for this Action
          enum:
          - CreateChildTasks
          - RunWorker
          - TriggerParentTask
          nullable: true
          type: string
        childTaskConfigurations:
          description: The Child Task Configurations
          items:
            $ref: '#/components/schemas/CreateChildTaskConfiguration'
          nullable: true
          type: array
      type: object
    CreateEventHandlerRequest:
      additionalProperties: false
      description: Contains information for creating an Event Handler
      example:
        taskActivity:
          correlationIds:
          - setTo: setTo
            mapFrom: mapFrom
          - setTo: setTo
            mapFrom: mapFrom
          type: type
          taskFields:
            key:
              setTo: ""
              mapFrom: mapFrom
        eventMatchingPattern:
          filter: filter
          eventType: eventType
        displayName: displayName
        description: description
        runAsUserId:
          setTo: setTo
          mapFrom: mapFrom
        id:
          code: code
          scope: scope
        taskDefinitionId:
          code: code
          scope: scope
        status: status
        taskDefinitionAsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        status:
          description: The current status of the event handler
          minLength: 1
          type: string
        eventMatchingPattern:
          $ref: '#/components/schemas/EventMatchingPattern'
        runAsUserId:
          $ref: '#/components/schemas/EventHandlerMapping'
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionAsAt:
          description: AsAt of the required task definition
          format: date-time
          nullable: true
          type: string
        taskActivity:
          $ref: '#/components/schemas/TaskActivity'
      required:
      - displayName
      - eventMatchingPattern
      - id
      - runAsUserId
      - status
      - taskActivity
      - taskDefinitionId
      type: object
    CreateNewTaskActivity:
      additionalProperties: false
      description: Define a Task Activity that creates a new task
      properties:
        initialTrigger:
          description: Trigger to supply to all tasks to be made
          nullable: true
          type: string
        type:
          description: The type of task activity
          enum:
          - CreateNewTask
          - UpdateMatchingTasks
          minLength: 1
          type: string
        correlationIds:
          description: The event to correlation ID mappings
          items:
            $ref: '#/components/schemas/EventHandlerMapping'
          nullable: true
          type: array
        taskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: The event to task field mappings
          nullable: true
          type: object
      required:
      - type
      type: object
    CreateNewTaskActivityResponse:
      additionalProperties: false
      description: Read only Create new task response
      properties:
        type:
          description: Type of task activity
          enum:
          - CreateNewTask
          - UpdateMatchingTasks
          nullable: true
          type: string
        initialTrigger:
          description: Trigger to supply to all tasks to be made
          nullable: true
          type: string
        correlationIds:
          description: The event to correlation ID mappings
          items:
            $ref: '#/components/schemas/EventHandlerMapping'
          nullable: true
          type: array
        taskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: The event to task field mappings
          nullable: true
          type: object
      type: object
    CreateTaskDefinitionRequest:
      additionalProperties: false
      description: Contains required info to create a new Task Definition
      example:
        initialState:
          requiredFields:
          - requiredFields
          - requiredFields
          name: name
        displayName: displayName
        description: description
        fieldSchema:
        - readOnlyStates:
            stateType: stateType
            selectedStates:
            - selectedStates
            - selectedStates
          name: name
          valueConstraints:
            acceptableValues:
            - ""
            - ""
            constraintType: constraintType
            valueSourceType: valueSourceType
          type: type
        - readOnlyStates:
            stateType: stateType
            selectedStates:
            - selectedStates
            - selectedStates
          name: name
          valueConstraints:
            acceptableValues:
            - ""
            - ""
            constraintType: constraintType
            valueSourceType: valueSourceType
          type: type
        id:
          code: code
          scope: scope
        triggers:
        - name: name
          trigger:
            type: type
        - name: name
          trigger:
            type: type
        transitions:
        - fromState: fromState
          toState: toState
          guard: guard
          action: action
          trigger: trigger
        - fromState: fromState
          toState: toState
          guard: guard
          action: action
          trigger: trigger
        actions:
        - name: name
          runAsUserId: runAsUserId
          actionDetails:
            type: type
        - name: name
          runAsUserId: runAsUserId
          actionDetails:
            type: type
        states:
        - name: name
        - name: name
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        states:
          description: The states this Task Definition operates over
          items:
            $ref: '#/components/schemas/TaskStateDefinition'
          minItems: 1
          type: array
        fieldSchema:
          description: Defines the fields associated with this Task
          items:
            $ref: '#/components/schemas/TaskFieldDefinition'
          nullable: true
          type: array
        initialState:
          $ref: '#/components/schemas/InitialState'
        triggers:
          description: Triggers
          items:
            $ref: '#/components/schemas/TransitionTriggerDefinition'
          nullable: true
          type: array
        transitions:
          description: Transitions
          items:
            $ref: '#/components/schemas/TaskTransitionDefinition'
          nullable: true
          type: array
        actions:
          description: Actions
          items:
            $ref: '#/components/schemas/ActionDefinition'
          nullable: true
          type: array
      required:
      - displayName
      - id
      - initialState
      - states
      type: object
    CreateTaskRequest:
      additionalProperties: false
      description: Contains required info to create a new Task
      example:
        correlationIds:
        - correlationIds
        - correlationIds
        fields:
        - name: name
          value: ""
        - name: name
          value: ""
        taskDefinitionId:
          code: code
          scope: scope
        stackingKey: stackingKey
      properties:
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        correlationIds:
          description: A set of guid identifiers that allow correlation across the
            application tier
          items:
            type: string
          nullable: true
          type: array
        fields:
          description: Fields and their initial values - should correspond with the
            Task Definition field schema
          items:
            $ref: '#/components/schemas/TaskInstanceField'
          nullable: true
          type: array
        stackingKey:
          description: The key for the Stack that this Task should be added to
          nullable: true
          type: string
      required:
      - taskDefinitionId
      type: object
    CreateWorkerRequest:
      additionalProperties: false
      description: Request to Create a new worker
      example:
        workerConfiguration:
          type: type
        displayName: displayName
        description: description
        id:
          code: code
          scope: scope
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        displayName:
          description: Human readable name
          maxLength: 512
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        description:
          description: Human readable description
          maxLength: 1024
          minLength: 0
          nullable: true
          pattern: "^[\\s\\S]*$"
          type: string
        workerConfiguration:
          $ref: '#/components/schemas/WorkerConfiguration'
      required:
      - displayName
      - id
      - workerConfiguration
      type: object
    DeletedEntityResponse:
      additionalProperties: false
      example:
        asAt: 2000-01-23T04:56:07.000+00:00
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
        effectiveFrom: 2000-01-23T04:56:07.000+00:00
      properties:
        href:
          description: The Uri related to this Entity
          format: uri
          nullable: true
          type: string
        effectiveFrom:
          description: The EffectiveFrom for this response
          format: date-time
          nullable: true
          type: string
        asAt:
          description: The AsAt for this response
          format: date-time
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - asAt
      type: object
    DeleteTasksRequest:
      additionalProperties: false
      description: Contains required info to delete Tasks
      example:
        taskIds:
        - taskIds
        - taskIds
      properties:
        taskIds:
          description: The Ids of the Tasks to delete
          items:
            type: string
          nullable: true
          type: array
      type: object
    EventHandler:
      additionalProperties: false
      description: Information about an Event Handler
      example:
        taskActivity:
          correlationIds:
          - setTo: setTo
            mapFrom: mapFrom
          - setTo: setTo
            mapFrom: mapFrom
          type: type
          taskFields:
            key:
              setTo: ""
              mapFrom: mapFrom
        eventMatchingPattern:
          filter: filter
          eventType: eventType
        displayName: displayName
        description: description
        runAsUserId:
          setTo: setTo
          mapFrom: mapFrom
        id:
          code: code
          scope: scope
        version:
          asAtModified: 2000-01-23T04:56:07.000+00:00
          userIdModified: userIdModified
          asAtVersionNumber: 0
          asAtCreated: 2000-01-23T04:56:07.000+00:00
          requestIdCreated: requestIdCreated
          userIdCreated: userIdCreated
          requestIdModified: requestIdModified
        taskDefinitionId:
          code: code
          scope: scope
        status: status
        taskDefinitionAsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        version:
          $ref: '#/components/schemas/VersionInfo'
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        status:
          description: The current status of the event handler
          minLength: 1
          type: string
        eventMatchingPattern:
          $ref: '#/components/schemas/EventMatchingPattern'
        runAsUserId:
          $ref: '#/components/schemas/EventHandlerMapping'
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionAsAt:
          description: AsAt of the required task definition
          format: date-time
          nullable: true
          type: string
        taskActivity:
          $ref: '#/components/schemas/TaskActivityResponse'
      required:
      - displayName
      - eventMatchingPattern
      - id
      - runAsUserId
      - status
      - taskActivity
      - taskDefinitionId
      type: object
    EventHandlerMapping:
      additionalProperties: false
      description: Defines a mapping for event handler properties
      example:
        setTo: setTo
        mapFrom: mapFrom
      properties:
        mapFrom:
          description: The field to map from
          nullable: true
          type: string
        setTo:
          description: The (constant) value to set
          nullable: true
          type: string
      type: object
    EventMatchingPattern:
      additionalProperties: false
      description: The matching event pattern object
      example:
        filter: filter
        eventType: eventType
      properties:
        eventType:
          description: "The type of event to subscribe to. The list of available event\
            \ types can be discovered\r\nby calling the ‘List available EventTypes’\
            \ API endpoint in the Notifications service"
          maxLength: 512
          minLength: 0
          pattern: "^[a-zA-Z]*$"
          type: string
        filter:
          description: "A filter on the event. See https://support.lusid.com/filtering-results-from-lusid\
            \ for more information.\r\nIf not provided, all events will be matched."
          nullable: true
          type: string
      required:
      - eventType
      type: object
    Fail:
      additionalProperties: false
      description: Configuration for a Worker that always Fails
      properties:
        type:
          description: The type of worker
          enum:
          - Fail
          - HealthCheck
          - LuminesceView
          - SchedulerJob
          - Sleep
          minLength: 1
          type: string
      required:
      - type
      type: object
    FailResponse:
      additionalProperties: false
      description: Readonly configuration for a Worker that always Fails
      properties:
        type:
          description: The type of worker
          enum:
          - Fail
          - HealthCheck
          - LuminesceView
          - SchedulerJob
          - Sleep
          nullable: true
          type: string
      type: object
    FieldMapping:
      additionalProperties: false
      description: Defines a single Field map
      example:
        setTo: ""
        mapFrom: mapFrom
      properties:
        mapFrom:
          description: The field to map from
          maxLength: 1024
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        setTo:
          description: The (constant) value to set
          nullable: true
      type: object
    GetWorkerResultResponse:
      additionalProperties: false
      description: The RunWorker response
      example:
        statusDetail: statusDetail
        workerStatus: workerStatus
        results:
        - key: ""
        - key: ""
      properties:
        workerStatus:
          description: The final status of the Worker
          minLength: 1
          type: string
        results:
          description: Results
          items:
            additionalProperties: {}
            type: object
          type: array
        statusDetail:
          description: Detail on the final status
          nullable: true
          type: string
      required:
      - results
      - workerStatus
      type: object
    HealthCheck:
      additionalProperties: false
      description: Configuration for a Worker that performs a GET against a given
        Url.
      properties:
        type:
          description: The type of worker
          enum:
          - HealthCheck
          minLength: 1
          type: string
        url:
          description: "The URL to check, eg: https://www.google.com/"
          format: uri
          maxLength: 2048
          minLength: 1
          type: string
      required:
      - type
      - url
      type: object
    HealthCheckResponse:
      additionalProperties: false
      description: Readonly configuration for a Worker that performs a GET against
        a given Url.
      properties:
        type:
          description: The type of worker
          enum:
          - HealthCheck
          nullable: true
          type: string
        url:
          description: "The URL to check, eg: https://www.google.com/"
          nullable: true
          type: string
      type: object
    IdentifierPartSchema:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
        index: 0
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        required: true
      properties:
        index:
          format: int32
          type: integer
        name:
          minLength: 1
          type: string
        displayName:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        required:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - description
      - displayName
      - index
      - name
      - required
      type: object
    IdSelectorDefinition:
      additionalProperties: false
      example:
        identifier:
          key: identifier
        name: name
        description: description
        actions:
        - activity: activity
          scope: scope
          entity: entity
        - activity: activity
          scope: scope
          entity: entity
      properties:
        identifier:
          additionalProperties:
            type: string
          minLength: 1
          type: object
        actions:
          items:
            $ref: '#/components/schemas/ActionId'
          minItems: 1
          type: array
        name:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - actions
      - identifier
      type: object
    InitialState:
      additionalProperties: false
      description: Defines the Initial State of the Task
      example:
        requiredFields:
        - requiredFields
        - requiredFields
        name: name
      properties:
        name:
          description: The Initial State of the Task
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        requiredFields:
          description: Required input Fields for the Initial State
          items:
            type: string
          nullable: true
          type: array
      required:
      - name
      type: object
    Link:
      additionalProperties: false
      example:
        method: method
        description: description
        href: https://openapi-generator.tech
        relation: relation
      properties:
        relation:
          type: string
        href:
          format: uri
          type: string
        description:
          nullable: true
          type: string
        method:
          type: string
      required:
      - href
      - method
      - relation
      type: object
    LuminesceView:
      additionalProperties: false
      description: Configuration for a Worker that calls a Luminesce view
      properties:
        type:
          description: The type of worker
          enum:
          - LuminesceView
          minLength: 1
          type: string
        name:
          description: Name of the view in Luminesce
          maxLength: 512
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
      required:
      - name
      - type
      type: object
    LuminesceViewResponse:
      additionalProperties: false
      description: Readonly configuration for a Worker that calls a Luminesce view
      properties:
        type:
          description: The type of worker
          enum:
          - LuminesceView
          nullable: true
          type: string
        name:
          description: Name of the view in Luminesce
          nullable: true
          type: string
      type: object
    LusidProblemDetails:
      additionalProperties: false
      properties:
        name:
          minLength: 1
          type: string
        errorDetails:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        code:
          format: int32
          type: integer
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
    LusidValidationProblemDetails:
      additionalProperties: false
      properties:
        name:
          minLength: 1
          type: string
        errorDetails:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        code:
          format: int32
          type: integer
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
    PagedResourceListOfEventHandler:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - taskActivity:
            correlationIds:
            - setTo: setTo
              mapFrom: mapFrom
            - setTo: setTo
              mapFrom: mapFrom
            type: type
            taskFields:
              key:
                setTo: ""
                mapFrom: mapFrom
          eventMatchingPattern:
            filter: filter
            eventType: eventType
          displayName: displayName
          description: description
          runAsUserId:
            setTo: setTo
            mapFrom: mapFrom
          id:
            code: code
            scope: scope
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          taskDefinitionId:
            code: code
            scope: scope
          status: status
          taskDefinitionAsAt: 2000-01-23T04:56:07.000+00:00
        - taskActivity:
            correlationIds:
            - setTo: setTo
              mapFrom: mapFrom
            - setTo: setTo
              mapFrom: mapFrom
            type: type
            taskFields:
              key:
                setTo: ""
                mapFrom: mapFrom
          eventMatchingPattern:
            filter: filter
            eventType: eventType
          displayName: displayName
          description: description
          runAsUserId:
            setTo: setTo
            mapFrom: mapFrom
          id:
            code: code
            scope: scope
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          taskDefinitionId:
            code: code
            scope: scope
          status: status
          taskDefinitionAsAt: 2000-01-23T04:56:07.000+00:00
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
        values:
          items:
            $ref: '#/components/schemas/EventHandler'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - values
      type: object
    PagedResourceListOfTask:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - terminalState: true
          stack:
            stackMembershipType: stackMembershipType
            stackOpenedAsAt: 2000-01-23T04:56:07.000+00:00
            stackClosedAsAt: 2000-01-23T04:56:07.000+00:00
            leadTaskState: leadTaskState
            stackStatus: stackStatus
            leadTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tasksInStack: 0
            memberAddedAsAt: 2000-01-23T04:56:07.000+00:00
          parentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          actionLogIdCreated: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          taskDefinitionId:
            code: code
            scope: scope
          stackingKey: stackingKey
          actionLogIdModified: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          childTasks:
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          asAtLastTransition: 2000-01-23T04:56:07.000+00:00
          actionLogIdSubmitted: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ultimateParentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          correlationIds:
          - correlationIds
          - correlationIds
          taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          fields:
          - name: name
            value: ""
          - name: name
            value: ""
        - terminalState: true
          stack:
            stackMembershipType: stackMembershipType
            stackOpenedAsAt: 2000-01-23T04:56:07.000+00:00
            stackClosedAsAt: 2000-01-23T04:56:07.000+00:00
            leadTaskState: leadTaskState
            stackStatus: stackStatus
            leadTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tasksInStack: 0
            memberAddedAsAt: 2000-01-23T04:56:07.000+00:00
          parentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          actionLogIdCreated: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          taskDefinitionId:
            code: code
            scope: scope
          stackingKey: stackingKey
          actionLogIdModified: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          childTasks:
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          asAtLastTransition: 2000-01-23T04:56:07.000+00:00
          actionLogIdSubmitted: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ultimateParentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          correlationIds:
          - correlationIds
          - correlationIds
          taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          fields:
          - name: name
            value: ""
          - name: name
            value: ""
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
        values:
          items:
            $ref: '#/components/schemas/Task'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - values
      type: object
    PagedResourceListOfTaskDefinition:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - initialState:
            requiredFields:
            - requiredFields
            - requiredFields
            name: name
          displayName: displayName
          description: description
          fieldSchema:
          - readOnlyStates:
              stateType: stateType
              selectedStates:
              - selectedStates
              - selectedStates
            name: name
            valueConstraints:
              acceptableValues:
              - ""
              - ""
              constraintType: constraintType
              valueSourceType: valueSourceType
            type: type
          - readOnlyStates:
              stateType: stateType
              selectedStates:
              - selectedStates
              - selectedStates
            name: name
            valueConstraints:
              acceptableValues:
              - ""
              - ""
              constraintType: constraintType
              valueSourceType: valueSourceType
            type: type
          id:
            code: code
            scope: scope
          triggers:
          - name: name
            trigger:
              type: type
          - name: name
            trigger:
              type: type
          transitions:
          - fromState: fromState
            toState: toState
            guard: guard
            action: action
            trigger: trigger
          - fromState: fromState
            toState: toState
            guard: guard
            action: action
            trigger: trigger
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          actions:
          - name: name
            runAsUserId: runAsUserId
            actionDetails:
              type: type
          - name: name
            runAsUserId: runAsUserId
            actionDetails:
              type: type
          states:
          - name: name
          - name: name
        - initialState:
            requiredFields:
            - requiredFields
            - requiredFields
            name: name
          displayName: displayName
          description: description
          fieldSchema:
          - readOnlyStates:
              stateType: stateType
              selectedStates:
              - selectedStates
              - selectedStates
            name: name
            valueConstraints:
              acceptableValues:
              - ""
              - ""
              constraintType: constraintType
              valueSourceType: valueSourceType
            type: type
          - readOnlyStates:
              stateType: stateType
              selectedStates:
              - selectedStates
              - selectedStates
            name: name
            valueConstraints:
              acceptableValues:
              - ""
              - ""
              constraintType: constraintType
              valueSourceType: valueSourceType
            type: type
          id:
            code: code
            scope: scope
          triggers:
          - name: name
            trigger:
              type: type
          - name: name
            trigger:
              type: type
          transitions:
          - fromState: fromState
            toState: toState
            guard: guard
            action: action
            trigger: trigger
          - fromState: fromState
            toState: toState
            guard: guard
            action: action
            trigger: trigger
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          actions:
          - name: name
            runAsUserId: runAsUserId
            actionDetails:
              type: type
          - name: name
            runAsUserId: runAsUserId
            actionDetails:
              type: type
          states:
          - name: name
          - name: name
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
        values:
          items:
            $ref: '#/components/schemas/TaskDefinition'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - values
      type: object
    PagedResourceListOfWorker:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - workerConfiguration: null
          resultFields:
          - displayName: displayName
            name: name
            description: description
            type: type
          - displayName: displayName
            name: name
            description: description
            type: type
          displayName: displayName
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          parameters:
          - displayName: displayName
            defaultValue: defaultValue
            name: name
            description: description
            type: type
            required: true
          - displayName: displayName
            defaultValue: defaultValue
            name: name
            description: description
            type: type
            required: true
        - workerConfiguration: null
          resultFields:
          - displayName: displayName
            name: name
            description: description
            type: type
          - displayName: displayName
            name: name
            description: description
            type: type
          displayName: displayName
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          parameters:
          - displayName: displayName
            defaultValue: defaultValue
            name: name
            description: description
            type: type
            required: true
          - displayName: displayName
            defaultValue: defaultValue
            name: name
            description: description
            type: type
            required: true
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
        values:
          items:
            $ref: '#/components/schemas/Worker'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - values
      type: object
    Parameter:
      additionalProperties: false
      description: Defines a Worker Parameter
      example:
        displayName: displayName
        defaultValue: defaultValue
        name: name
        description: description
        type: type
        required: true
      properties:
        type:
          description: The type of this Parameter
          minLength: 1
          type: string
        name:
          description: Name
          minLength: 1
          type: string
        displayName:
          description: DisplayName
          nullable: true
          type: string
        description:
          description: Description
          nullable: true
          type: string
        required:
          description: Required or not
          type: boolean
        defaultValue:
          description: DefaultValue
          nullable: true
          type: string
      required:
      - name
      - required
      - type
      type: object
    ParameterValue:
      additionalProperties: false
      description: Defines a Parameter Value
      example:
        name: name
        value: ""
      properties:
        name:
          description: Name
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        value:
          description: "Value which can be a String, Boolean, Decimal or DateTime\
            \ (ISO 8601)"
          nullable: true
      required:
      - name
      type: object
    ReadOnlyStates:
      additionalProperties: false
      description: Information about which states the field can be edited in
      example:
        stateType: stateType
        selectedStates:
        - selectedStates
        - selectedStates
      properties:
        stateType:
          description: "The State Type (e.g. InitialState, AllStates, TerminalState,\
            \ SelectedStates)"
          minLength: 1
          type: string
        selectedStates:
          description: Named states for which the field will be readonly - This field
            can only be populated if StateType = SelectedStates
          items:
            type: string
          nullable: true
          type: array
      required:
      - stateType
      type: object
    ResourceId:
      additionalProperties: false
      example:
        code: code
        scope: scope
      properties:
        scope:
          type: string
        code:
          type: string
      required:
      - code
      - scope
      type: object
    ResourceListOfAccessControlledResource:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - application: application
          name: name
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          actions:
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          identifierParts:
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
        - application: application
          name: name
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          actions:
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          identifierParts:
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/AccessControlledResource'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    ResourceListOfChangeItem:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - asAtModified: 2000-01-23T04:56:07.000+00:00
          newValue: ""
          userIdModified: userIdModified
          asAtVersionNumber: 0
          action: action
          attributeName: attributeName
          requestIdModified: requestIdModified
          previousValue: ""
        - asAtModified: 2000-01-23T04:56:07.000+00:00
          newValue: ""
          userIdModified: userIdModified
          asAtVersionNumber: 0
          action: action
          attributeName: attributeName
          requestIdModified: requestIdModified
          previousValue: ""
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/ChangeItem'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    ResourceListOfTask:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - terminalState: true
          stack:
            stackMembershipType: stackMembershipType
            stackOpenedAsAt: 2000-01-23T04:56:07.000+00:00
            stackClosedAsAt: 2000-01-23T04:56:07.000+00:00
            leadTaskState: leadTaskState
            stackStatus: stackStatus
            leadTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tasksInStack: 0
            memberAddedAsAt: 2000-01-23T04:56:07.000+00:00
          parentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          actionLogIdCreated: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          taskDefinitionId:
            code: code
            scope: scope
          stackingKey: stackingKey
          actionLogIdModified: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          childTasks:
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          asAtLastTransition: 2000-01-23T04:56:07.000+00:00
          actionLogIdSubmitted: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ultimateParentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          correlationIds:
          - correlationIds
          - correlationIds
          taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          fields:
          - name: name
            value: ""
          - name: name
            value: ""
        - terminalState: true
          stack:
            stackMembershipType: stackMembershipType
            stackOpenedAsAt: 2000-01-23T04:56:07.000+00:00
            stackClosedAsAt: 2000-01-23T04:56:07.000+00:00
            leadTaskState: leadTaskState
            stackStatus: stackStatus
            leadTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tasksInStack: 0
            memberAddedAsAt: 2000-01-23T04:56:07.000+00:00
          parentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          actionLogIdCreated: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version:
            asAtModified: 2000-01-23T04:56:07.000+00:00
            userIdModified: userIdModified
            asAtVersionNumber: 0
            asAtCreated: 2000-01-23T04:56:07.000+00:00
            requestIdCreated: requestIdCreated
            userIdCreated: userIdCreated
            requestIdModified: requestIdModified
          taskDefinitionId:
            code: code
            scope: scope
          stackingKey: stackingKey
          actionLogIdModified: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          childTasks:
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          - taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          asAtLastTransition: 2000-01-23T04:56:07.000+00:00
          actionLogIdSubmitted: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ultimateParentTask:
            taskDefinitionVersion:
              asAtModified: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            taskDefinitionDisplayName: taskDefinitionDisplayName
            taskDefinitionId:
              code: code
              scope: scope
          correlationIds:
          - correlationIds
          - correlationIds
          taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          fields:
          - name: name
            value: ""
          - name: name
            value: ""
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/Task'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    ResultantChildTaskConfiguration:
      additionalProperties: false
      description: Child Task Configuration
      properties:
        resultMatchingPattern:
          $ref: '#/components/schemas/ResultMatchingPattern'
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionAsAt:
          description: TaskDefinition AsAt timestamp
          format: date-time
          nullable: true
          type: string
        initialTrigger:
          description: The Initial Trigger for automatic start
          maxLength: 1024
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        childTaskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: Field Mappings
          type: object
        mapStackingKeyFrom:
          description: The field to be mapped as the ChildTasks Stacking Key
          nullable: true
          type: string
      required:
      - childTaskFields
      - taskDefinitionId
      type: object
    ResultField:
      additionalProperties: false
      description: Defines a Worker Result Field
      example:
        displayName: displayName
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name
          minLength: 1
          type: string
        type:
          description: The type of this Parameter
          minLength: 1
          type: string
        displayName:
          description: DisplayName
          nullable: true
          type: string
        description:
          description: Description
          nullable: true
          type: string
      required:
      - name
      - type
      type: object
    ResultMatchingPattern:
      additionalProperties: false
      description: Standard Finbourne filter to match against Run Worker results
      properties:
        filter:
          description: Filter string
          maxLength: 1024
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
      required:
      - filter
      type: object
    RunWorkerAction:
      additionalProperties: false
      description: Defines a Run Worker Action
      properties:
        type:
          description: Type name for this Action
          enum:
          - RunWorker
          minLength: 1
          type: string
        workerId:
          $ref: '#/components/schemas/ResourceId'
        workerAsAt:
          description: Worker AsAt
          format: date-time
          nullable: true
          type: string
        workerParameters:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: Parameters for this Worker
          nullable: true
          type: object
        workerStatusTriggers:
          $ref: '#/components/schemas/WorkerStatusTriggers'
        childTaskConfigurations:
          description: Tasks can be generated from run worker results; this is the
            configuration
          items:
            $ref: '#/components/schemas/ResultantChildTaskConfiguration'
          nullable: true
          type: array
        workerTimeout:
          description: Worker WorkerTimeout in seconds
          format: int32
          nullable: true
          type: integer
      required:
      - type
      - workerId
      type: object
    RunWorkerActionResponse:
      additionalProperties: false
      description: Defines a read-only Run Worker Action
      properties:
        type:
          description: Type name for this Action
          enum:
          - RunWorker
          nullable: true
          type: string
        workerId:
          $ref: '#/components/schemas/ResourceId'
        workerAsAt:
          description: Worker AsAt
          format: date-time
          nullable: true
          type: string
        workerParameters:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: Parameters for this Worker
          nullable: true
          type: object
        workerStatusTriggers:
          $ref: '#/components/schemas/WorkerStatusTriggers'
        childTaskConfigurations:
          description: Tasks can be generated from run worker results; this is the
            configuration
          items:
            $ref: '#/components/schemas/ResultantChildTaskConfiguration'
          nullable: true
          type: array
        workerTimeout:
          description: Worker timeout in seconds
          format: int32
          nullable: true
          type: integer
      type: object
    RunWorkerRequest:
      additionalProperties: false
      description: Request to Create a new worker
      example:
        workerTimeout: 0
        parameters:
        - name: name
          value: ""
        - name: name
          value: ""
      properties:
        parameters:
          description: The Parameter and their values.
          items:
            $ref: '#/components/schemas/ParameterValue'
          type: array
        workerTimeout:
          description: The timeout in seconds for the worker
          format: int32
          nullable: true
          type: integer
      required:
      - parameters
      type: object
    RunWorkerResponse:
      additionalProperties: false
      description: The RunWorker response
      example:
        statusDetail: statusDetail
        runId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        runId:
          description: Identifies a Worker run
          format: uuid
          type: string
        statusDetail:
          description: Detail on the final status
          nullable: true
          type: string
      required:
      - runId
      type: object
    SchedulerJob:
      additionalProperties: false
      description: Configuration for a Worker that calls a Scheduler Job
      properties:
        type:
          description: The type of worker
          enum:
          - SchedulerJob
          minLength: 1
          type: string
        jobId:
          $ref: '#/components/schemas/ResourceId'
      required:
      - jobId
      - type
      type: object
    SchedulerJobResponse:
      additionalProperties: false
      description: Readonly configuration for a Worker that calls a Scheduler job
      properties:
        type:
          description: The type of worker
          enum:
          - SchedulerJob
          nullable: true
          type: string
        jobId:
          $ref: '#/components/schemas/ResourceId'
      type: object
    Sleep:
      additionalProperties: false
      description: Configuration for a Worker that Sleeps for a user-defined amount
        of time
      properties:
        type:
          description: The type of worker
          enum:
          - Sleep
          minLength: 1
          type: string
      required:
      - type
      type: object
    SleepResponse:
      additionalProperties: false
      description: Configuration for a Worker that Sleeps for a user-defined amount
        of time
      properties:
        type:
          description: The type of worker
          enum:
          - Sleep
          minLength: 1
          type: string
      required:
      - type
      type: object
    Stack:
      additionalProperties: false
      description: Information pertaining to the Tasks Stack if one is present
      example:
        stackMembershipType: stackMembershipType
        stackOpenedAsAt: 2000-01-23T04:56:07.000+00:00
        stackClosedAsAt: 2000-01-23T04:56:07.000+00:00
        leadTaskState: leadTaskState
        stackStatus: stackStatus
        leadTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tasksInStack: 0
        memberAddedAsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        memberAddedAsAt:
          description: When the Task was added to the Stack
          format: date-time
          type: string
        stackOpenedAsAt:
          description: When the Stack was opened
          format: date-time
          type: string
        stackClosedAsAt:
          description: When the Stack was closed
          format: date-time
          nullable: true
          type: string
        stackMembershipType:
          description: Whether the task is the Lead task of the Stack or a Member
            within the Stack
          nullable: true
          type: string
        stackStatus:
          description: Status of the Stack (Open/Closed)
          nullable: true
          type: string
        leadTaskId:
          description: ID of the Lead Task
          format: uuid
          type: string
        leadTaskState:
          description: State of the Lead Task
          nullable: true
          type: string
        tasksInStack:
          description: Number of Tasks in the Stack
          format: int32
          type: integer
      type: object
    Task:
      additionalProperties: false
      description: Defines a Task created based on a Task Definition
      example:
        terminalState: true
        stack:
          stackMembershipType: stackMembershipType
          stackOpenedAsAt: 2000-01-23T04:56:07.000+00:00
          stackClosedAsAt: 2000-01-23T04:56:07.000+00:00
          leadTaskState: leadTaskState
          stackStatus: stackStatus
          leadTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tasksInStack: 0
          memberAddedAsAt: 2000-01-23T04:56:07.000+00:00
        parentTask:
          taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          taskDefinitionId:
            code: code
            scope: scope
        actionLogIdCreated: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version:
          asAtModified: 2000-01-23T04:56:07.000+00:00
          userIdModified: userIdModified
          asAtVersionNumber: 0
          asAtCreated: 2000-01-23T04:56:07.000+00:00
          requestIdCreated: requestIdCreated
          userIdCreated: userIdCreated
          requestIdModified: requestIdModified
        taskDefinitionId:
          code: code
          scope: scope
        stackingKey: stackingKey
        actionLogIdModified: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        childTasks:
        - taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          taskDefinitionId:
            code: code
            scope: scope
        - taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          taskDefinitionId:
            code: code
            scope: scope
        asAtLastTransition: 2000-01-23T04:56:07.000+00:00
        actionLogIdSubmitted: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ultimateParentTask:
          taskDefinitionVersion:
            asAtModified: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          taskDefinitionDisplayName: taskDefinitionDisplayName
          taskDefinitionId:
            code: code
            scope: scope
        correlationIds:
        - correlationIds
        - correlationIds
        taskDefinitionVersion:
          asAtModified: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        taskDefinitionDisplayName: taskDefinitionDisplayName
        fields:
        - name: name
          value: ""
        - name: name
          value: ""
      properties:
        id:
          description: The unique id for this Task
          format: uuid
          type: string
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionVersion:
          $ref: '#/components/schemas/TaskDefinitionVersion'
        taskDefinitionDisplayName:
          description: The display name of the Task Definition used by this Task
          minLength: 1
          type: string
        state:
          description: Current State
          minLength: 1
          type: string
        ultimateParentTask:
          $ref: '#/components/schemas/TaskSummary'
        parentTask:
          $ref: '#/components/schemas/TaskSummary'
        childTasks:
          description: This Task's child tasks
          items:
            $ref: '#/components/schemas/TaskSummary'
          nullable: true
          type: array
        correlationIds:
          description: User-provided ID used to link entities and tasks
          items:
            type: string
          nullable: true
          type: array
        version:
          $ref: '#/components/schemas/VersionInfo'
        terminalState:
          description: True if no onward transitions are possible
          type: boolean
        asAtLastTransition:
          description: Last Transition timestamp
          format: date-time
          nullable: true
          type: string
        fields:
          description: Fields and their latest values - should correspond with the
            Task Definition field schema
          items:
            $ref: '#/components/schemas/TaskInstanceField'
          nullable: true
          type: array
        stackingKey:
          description: The key used to determine which stack to add the Task to
          nullable: true
          type: string
        stack:
          $ref: '#/components/schemas/Stack'
        actionLogIdCreated:
          description: The Id of the Action that created this Task
          format: uuid
          nullable: true
          type: string
        actionLogIdModified:
          description: The Id of the Action that last modified this Task
          format: uuid
          nullable: true
          type: string
        actionLogIdSubmitted:
          description: The Id of the last Action submitted by this Task
          format: uuid
          nullable: true
          type: string
      required:
      - id
      - state
      - taskDefinitionDisplayName
      - taskDefinitionId
      - taskDefinitionVersion
      - terminalState
      - ultimateParentTask
      type: object
    TaskActivity:
      additionalProperties: false
      description: Information about what tasks to create/update when receiving events
      example:
        correlationIds:
        - setTo: setTo
          mapFrom: mapFrom
        - setTo: setTo
          mapFrom: mapFrom
        type: type
        taskFields:
          key:
            setTo: ""
            mapFrom: mapFrom
      oneOf:
      - $ref: '#/components/schemas/CreateNewTaskActivity'
      - $ref: '#/components/schemas/UpdateMatchingTasksActivity'
      properties:
        type:
          description: The type of task activity
          minLength: 1
          type: string
        correlationIds:
          description: The event to correlation ID mappings
          items:
            $ref: '#/components/schemas/EventHandlerMapping'
          nullable: true
          type: array
        taskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: The event to task field mappings
          nullable: true
          type: object
      required:
      - type
      type: object
    TaskActivityResponse:
      additionalProperties: false
      description: Readonly information about how the worker should be executed
      example:
        correlationIds:
        - setTo: setTo
          mapFrom: mapFrom
        - setTo: setTo
          mapFrom: mapFrom
        type: type
        taskFields:
          key:
            setTo: ""
            mapFrom: mapFrom
      oneOf:
      - $ref: '#/components/schemas/CreateNewTaskActivityResponse'
      - $ref: '#/components/schemas/UpdateMatchingTasksActivityResponse'
      properties:
        type:
          description: The type of task activity
          nullable: true
          type: string
        correlationIds:
          description: The event to correlation ID mappings
          items:
            $ref: '#/components/schemas/EventHandlerMapping'
          nullable: true
          type: array
        taskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: The event to task field mappings
          nullable: true
          type: object
      type: object
    TaskDefinition:
      additionalProperties: false
      description: Task Definition
      example:
        initialState:
          requiredFields:
          - requiredFields
          - requiredFields
          name: name
        displayName: displayName
        description: description
        fieldSchema:
        - readOnlyStates:
            stateType: stateType
            selectedStates:
            - selectedStates
            - selectedStates
          name: name
          valueConstraints:
            acceptableValues:
            - ""
            - ""
            constraintType: constraintType
            valueSourceType: valueSourceType
          type: type
        - readOnlyStates:
            stateType: stateType
            selectedStates:
            - selectedStates
            - selectedStates
          name: name
          valueConstraints:
            acceptableValues:
            - ""
            - ""
            constraintType: constraintType
            valueSourceType: valueSourceType
          type: type
        id:
          code: code
          scope: scope
        triggers:
        - name: name
          trigger:
            type: type
        - name: name
          trigger:
            type: type
        transitions:
        - fromState: fromState
          toState: toState
          guard: guard
          action: action
          trigger: trigger
        - fromState: fromState
          toState: toState
          guard: guard
          action: action
          trigger: trigger
        version:
          asAtModified: 2000-01-23T04:56:07.000+00:00
          userIdModified: userIdModified
          asAtVersionNumber: 0
          asAtCreated: 2000-01-23T04:56:07.000+00:00
          requestIdCreated: requestIdCreated
          userIdCreated: userIdCreated
          requestIdModified: requestIdModified
        actions:
        - name: name
          runAsUserId: runAsUserId
          actionDetails:
            type: type
        - name: name
          runAsUserId: runAsUserId
          actionDetails:
            type: type
        states:
        - name: name
        - name: name
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        version:
          $ref: '#/components/schemas/VersionInfo'
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        states:
          description: The states this Task Definition operates over
          items:
            $ref: '#/components/schemas/TaskStateDefinition'
          minItems: 1
          type: array
        fieldSchema:
          description: The Fields that this Task Definition operates on
          items:
            $ref: '#/components/schemas/TaskFieldDefinition'
          nullable: true
          type: array
        initialState:
          $ref: '#/components/schemas/InitialState'
        triggers:
          description: The Triggers for State transition
          items:
            $ref: '#/components/schemas/TransitionTriggerDefinition'
          nullable: true
          type: array
        actions:
          description: The Actions of this Task - executed after a Transition completion
          items:
            $ref: '#/components/schemas/ActionDefinitionResponse'
          nullable: true
          type: array
        transitions:
          description: The Transitions between States
          items:
            $ref: '#/components/schemas/TaskTransitionDefinition'
          nullable: true
          type: array
      required:
      - displayName
      - id
      - initialState
      - states
      type: object
    TaskDefinitionVersion:
      additionalProperties: false
      description: The version of the Task Definition used by this Task
      example:
        asAtModified: 2000-01-23T04:56:07.000+00:00
      properties:
        asAtModified:
          description: The asAt datetime of the Task Definition used by this Task
          format: date-time
          type: string
      type: object
    TaskFieldDefinition:
      additionalProperties: false
      description: Defines a Task Definition Field
      example:
        readOnlyStates:
          stateType: stateType
          selectedStates:
          - selectedStates
          - selectedStates
        name: name
        valueConstraints:
          acceptableValues:
          - ""
          - ""
          constraintType: constraintType
          valueSourceType: valueSourceType
        type: type
      properties:
        name:
          description: The name of this Field
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        type:
          description: "The value type for the field. Available values are: \"String\"\
            , \"Decimal\", \"DateTime\", \"Boolean\")"
          minLength: 1
          type: string
        readOnlyStates:
          $ref: '#/components/schemas/ReadOnlyStates'
        valueConstraints:
          $ref: '#/components/schemas/ValueConstraints'
      required:
      - name
      - type
      type: object
    TaskInstanceField:
      additionalProperties: false
      description: Defines a Field on a Task
      example:
        name: name
        value: ""
      properties:
        name:
          description: The name of this Field
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        value:
          description: The value of this Field
          nullable: true
      required:
      - name
      type: object
    TaskStateDefinition:
      additionalProperties: false
      description: A Task Definition/Task has a given set of States
      example:
        name: name
      properties:
        name:
          description: The Name of this State
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
      required:
      - name
      type: object
    TaskSummary:
      additionalProperties: false
      description: Summary of a Task created based on a Task Definition
      example:
        taskDefinitionVersion:
          asAtModified: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        taskDefinitionDisplayName: taskDefinitionDisplayName
        taskDefinitionId:
          code: code
          scope: scope
      properties:
        id:
          description: The unique id for this Task
          format: uuid
          type: string
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionVersion:
          $ref: '#/components/schemas/TaskDefinitionVersion'
        taskDefinitionDisplayName:
          description: The display name of the Task Definition used by this Task
          minLength: 1
          type: string
        state:
          description: Current State
          minLength: 1
          type: string
      required:
      - id
      - state
      - taskDefinitionDisplayName
      - taskDefinitionId
      - taskDefinitionVersion
      type: object
    TaskTransitionDefinition:
      additionalProperties: false
      description: Defines a State change
      example:
        fromState: fromState
        toState: toState
        guard: guard
        action: action
        trigger: trigger
      properties:
        fromState:
          description: The State this Transition if coming From
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        toState:
          description: The State this Transition is going To
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        trigger:
          description: The Trigger for this Transition
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        guard:
          description: "The Guard for this Transition, if any"
          maxLength: 1024
          minLength: 1
          nullable: true
          pattern: "^[\\s\\S]*$"
          type: string
        action:
          description: The Action to invoke on successful Transition
          maxLength: 1024
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
      required:
      - fromState
      - toState
      - trigger
      type: object
    TransitionTriggerDefinition:
      additionalProperties: false
      description: State changes happen in response to Triggers
      example:
        name: name
        trigger:
          type: type
      properties:
        name:
          description: The key/Name of this Trigger
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
        trigger:
          $ref: '#/components/schemas/TriggerSchema'
      required:
      - name
      - trigger
      type: object
    TriggerParentTaskAction:
      additionalProperties: false
      description: Defines a Trigger Parent Task Action
      properties:
        type:
          description: Type name for this Action
          enum:
          - TriggerParentTask
          minLength: 1
          type: string
        trigger:
          description: Trigger on parent task to be invoked
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_]+$"
          type: string
      required:
      - trigger
      - type
      type: object
    TriggerParentTaskActionResponse:
      additionalProperties: false
      description: Defines a read-only Trigger Parent Task Action
      properties:
        type:
          description: Type name for this Action
          enum:
          - TriggerParentTask
          nullable: true
          type: string
        trigger:
          description: Trigger on parent task to be invoked
          nullable: true
          type: string
      type: object
    TriggerSchema:
      additionalProperties: false
      description: Triggers can operate in response to different stimuli
      example:
        type: type
      properties:
        type:
          description: "The type of Trigger; available value(s): External"
          minLength: 1
          type: string
      required:
      - type
      type: object
    UpdateEventHandlerRequest:
      additionalProperties: false
      description: Contains information for updating an Event Handler
      example:
        taskActivity:
          correlationIds:
          - setTo: setTo
            mapFrom: mapFrom
          - setTo: setTo
            mapFrom: mapFrom
          type: type
          taskFields:
            key:
              setTo: ""
              mapFrom: mapFrom
        eventMatchingPattern:
          filter: filter
          eventType: eventType
        displayName: displayName
        description: description
        runAsUserId:
          setTo: setTo
          mapFrom: mapFrom
        taskDefinitionId:
          code: code
          scope: scope
        status: status
        taskDefinitionAsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        status:
          description: The current status of the event handler
          minLength: 1
          type: string
        eventMatchingPattern:
          $ref: '#/components/schemas/EventMatchingPattern'
        runAsUserId:
          $ref: '#/components/schemas/EventHandlerMapping'
        taskDefinitionId:
          $ref: '#/components/schemas/ResourceId'
        taskDefinitionAsAt:
          description: AsAt of the required task definition
          format: date-time
          nullable: true
          type: string
        taskActivity:
          $ref: '#/components/schemas/TaskActivity'
      required:
      - displayName
      - eventMatchingPattern
      - runAsUserId
      - status
      - taskActivity
      - taskDefinitionId
      type: object
    UpdateMatchingTasksActivity:
      additionalProperties: false
      description: Update all matching tasks based on filter matches
      properties:
        type:
          description: The type of task activity
          enum:
          - UpdateMatchingTasks
          minLength: 1
          type: string
        filter:
          description: The filter that matches on existing tasks
          nullable: true
          type: string
        trigger:
          description: Trigger to supply to all tasks that have been matched
          minLength: 1
          type: string
        correlationIds:
          description: The event to correlation ID mappings
          items:
            $ref: '#/components/schemas/EventHandlerMapping'
          nullable: true
          type: array
        taskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: The event to task field mappings
          nullable: true
          type: object
      required:
      - trigger
      - type
      type: object
    UpdateMatchingTasksActivityResponse:
      additionalProperties: false
      description: Readonly TaskActivity response
      properties:
        type:
          description: The type of task activity
          enum:
          - UpdateMatchingTasks
          nullable: true
          type: string
        filter:
          description: The filter that matches on existing tasks
          nullable: true
          type: string
        trigger:
          description: Trigger to supply to all tasks that have been matched
          nullable: true
          type: string
        correlationIds:
          description: The event to correlation ID mappings
          items:
            $ref: '#/components/schemas/EventHandlerMapping'
          nullable: true
          type: array
        taskFields:
          additionalProperties:
            $ref: '#/components/schemas/FieldMapping'
          description: The event to task field mappings
          nullable: true
          type: object
      type: object
    UpdateTaskDefinitionRequest:
      additionalProperties: false
      description: Contains required info to update a Task Definition
      example:
        initialState:
          requiredFields:
          - requiredFields
          - requiredFields
          name: name
        displayName: displayName
        description: description
        fieldSchema:
        - readOnlyStates:
            stateType: stateType
            selectedStates:
            - selectedStates
            - selectedStates
          name: name
          valueConstraints:
            acceptableValues:
            - ""
            - ""
            constraintType: constraintType
            valueSourceType: valueSourceType
          type: type
        - readOnlyStates:
            stateType: stateType
            selectedStates:
            - selectedStates
            - selectedStates
          name: name
          valueConstraints:
            acceptableValues:
            - ""
            - ""
            constraintType: constraintType
            valueSourceType: valueSourceType
          type: type
        triggers:
        - name: name
          trigger:
            type: type
        - name: name
          trigger:
            type: type
        transitions:
        - fromState: fromState
          toState: toState
          guard: guard
          action: action
          trigger: trigger
        - fromState: fromState
          toState: toState
          guard: guard
          action: action
          trigger: trigger
        actions:
        - name: name
          runAsUserId: runAsUserId
          actionDetails:
            type: type
        - name: name
          runAsUserId: runAsUserId
          actionDetails:
            type: type
        states:
        - name: name
        - name: name
      properties:
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        states:
          description: The states this Task Definition operates over
          items:
            $ref: '#/components/schemas/TaskStateDefinition'
          minItems: 1
          type: array
        fieldSchema:
          description: Defines the fields associated with this Task
          items:
            $ref: '#/components/schemas/TaskFieldDefinition'
          nullable: true
          type: array
        initialState:
          $ref: '#/components/schemas/InitialState'
        triggers:
          description: Triggers
          items:
            $ref: '#/components/schemas/TransitionTriggerDefinition'
          nullable: true
          type: array
        transitions:
          description: Transitions
          items:
            $ref: '#/components/schemas/TaskTransitionDefinition'
          nullable: true
          type: array
        actions:
          description: Actions
          items:
            $ref: '#/components/schemas/ActionDefinition'
          nullable: true
          type: array
      required:
      - displayName
      - initialState
      - states
      type: object
    UpdateTaskRequest:
      additionalProperties: false
      description: A request to update a Task
      example:
        correlationIds:
        - correlationIds
        - correlationIds
        fields:
        - name: name
          value: ""
        - name: name
          value: ""
        stackingKey: stackingKey
      properties:
        correlationIds:
          description: A set of guid identifiers that allow correlation across the
            application tier
          items:
            type: string
          nullable: true
          type: array
        fields:
          description: Defines the fields associated with the update
          items:
            $ref: '#/components/schemas/TaskInstanceField'
          nullable: true
          type: array
        stackingKey:
          description: The key for the Stack that this Task should be added to
          nullable: true
          type: string
      type: object
    UpdateWorkerRequest:
      additionalProperties: false
      description: Request to Update a new worker
      example:
        workerConfiguration: ""
        displayName: displayName
        description: description
      properties:
        displayName:
          description: Human readable name
          maxLength: 512
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        description:
          description: Human readable description
          maxLength: 1024
          minLength: 0
          nullable: true
          pattern: "^[\\s\\S]*$"
          type: string
        workerConfiguration:
          description: Information about how the worker should be executed
      required:
      - displayName
      - workerConfiguration
      type: object
    ValueConstraints:
      additionalProperties: false
      description: Constraints that should be applied to a Tasks fields
      example:
        acceptableValues:
        - ""
        - ""
        constraintType: constraintType
        valueSourceType: valueSourceType
      properties:
        constraintType:
          description: "Whether the constraint is a suggestion or should be enforced\
            \ via validation (e.g. Suggested, Validated)"
          minLength: 1
          type: string
        valueSourceType:
          description: The source of the acceptable values (e.g. AcceptableValues)
          minLength: 1
          type: string
        acceptableValues:
          description: The acceptable values for the field
          items: {}
          type: array
      required:
      - acceptableValues
      - constraintType
      - valueSourceType
      type: object
    VersionInfo:
      additionalProperties: false
      description: The version metadata.
      example:
        asAtModified: 2000-01-23T04:56:07.000+00:00
        userIdModified: userIdModified
        asAtVersionNumber: 0
        asAtCreated: 2000-01-23T04:56:07.000+00:00
        requestIdCreated: requestIdCreated
        userIdCreated: userIdCreated
        requestIdModified: requestIdModified
      properties:
        asAtCreated:
          description: The asAt datetime at which this entity was first created.
          format: date-time
          nullable: true
          type: string
        userIdCreated:
          description: The unique id of the user who created this entity.
          nullable: true
          type: string
        requestIdCreated:
          description: The request id of the request that created this entity.
          nullable: true
          type: string
        asAtModified:
          description: The asAt datetime at which this entity was last updated.
          format: date-time
          nullable: true
          type: string
        userIdModified:
          description: The unique id of the user who last updated this entity.
          nullable: true
          type: string
        requestIdModified:
          description: The request id of the request that last updated this entity.
          nullable: true
          type: string
        asAtVersionNumber:
          description: The integer version number for this entity (the entity was
            created at version 1).
          format: int32
          nullable: true
          type: integer
      type: object
    Worker:
      additionalProperties: false
      description: Information about the Worker
      example:
        workerConfiguration: null
        resultFields:
        - displayName: displayName
          name: name
          description: description
          type: type
        - displayName: displayName
          name: name
          description: description
          type: type
        displayName: displayName
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        id:
          code: code
          scope: scope
        version:
          asAtModified: 2000-01-23T04:56:07.000+00:00
          userIdModified: userIdModified
          asAtVersionNumber: 0
          asAtCreated: 2000-01-23T04:56:07.000+00:00
          requestIdCreated: requestIdCreated
          userIdCreated: userIdCreated
          requestIdModified: requestIdModified
        parameters:
        - displayName: displayName
          defaultValue: defaultValue
          name: name
          description: description
          type: type
          required: true
        - displayName: displayName
          defaultValue: defaultValue
          name: name
          description: description
          type: type
          required: true
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        displayName:
          description: Human readable name
          minLength: 1
          type: string
        description:
          description: Human readable description
          nullable: true
          type: string
        workerConfiguration:
          $ref: '#/components/schemas/WorkerConfigurationResponse'
        version:
          $ref: '#/components/schemas/VersionInfo'
        parameters:
          description: The Parameters this Worker accepts or requires.
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        resultFields:
          description: The Fields that the Worker results will come back with.
          items:
            $ref: '#/components/schemas/ResultField'
          nullable: true
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - displayName
      - id
      - workerConfiguration
      type: object
    WorkerConfiguration:
      additionalProperties: false
      description: Information about how the worker should be executed
      example:
        type: type
      oneOf:
      - $ref: '#/components/schemas/Fail'
      - $ref: '#/components/schemas/HealthCheck'
      - $ref: '#/components/schemas/LuminesceView'
      - $ref: '#/components/schemas/SchedulerJob'
      - $ref: '#/components/schemas/Sleep'
      properties:
        type:
          description: The type of worker
          minLength: 1
          type: string
      required:
      - type
      type: object
    WorkerConfigurationResponse:
      additionalProperties: false
      description: Readonly information about how the worker should be executed
      oneOf:
      - $ref: '#/components/schemas/FailResponse'
      - $ref: '#/components/schemas/HealthCheckResponse'
      - $ref: '#/components/schemas/LuminesceViewResponse'
      - $ref: '#/components/schemas/SchedulerJobResponse'
      - $ref: '#/components/schemas/SleepResponse'
      type: object
    WorkerStatusTriggers:
      additionalProperties: false
      description: Defines triggers that will be invoked per Worker outcome
      properties:
        started:
          description: Trigger to invoke when the Worker has Started
          nullable: true
          type: string
        completedWithResults:
          description: Trigger to invoke when the Worker has Completed (with results)
          nullable: true
          type: string
        completedNoResults:
          description: Trigger to invoke when the Worker has Completed (no results)
          nullable: true
          type: string
        failedToStart:
          description: Trigger to invoke when the Worker has Failed to Start
          nullable: true
          type: string
        failedToComplete:
          description: Trigger to invoke when the Worker has Failed to Complete
          nullable: true
          type: string
      type: object
  securitySchemes:
    oauth2:
      description: OAuth2 Implicit Grant
      flows:
        implicit:
          authorizationUrl: https://lusid.okta.com/oauth2/default/v1/authorize
          scopes: {}
      type: oauth2
x-tagGroups:
  name: API
  tags:
  - Action Logs
  - Application Metadata
  - Event Handlers
  - Task Definitions
  - Tasks
  - Workers
x-group-parameters: true

